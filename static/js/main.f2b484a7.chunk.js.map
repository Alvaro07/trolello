{"version":3,"sources":["redux/reducer.js","redux/store.js","firebase/firebase.js","firebase/config.js","firebase/functions/user.js","components/InputText/InputText.js","components/Button/Button.js","components/Loader/Loader.js","components/Login/Login.js","firebase/functions/board.js","components/Header/Header.js","hooks/usePortal/usePortal.js","components/Modal/Modal.js","components/Modal/ModalContent.js","components/Textarea/Textarea.js","utils/utilsFunctions.js","components/BoardCard/BoardCard.js","components/Dashboard/Dashboard.js","firebase/functions/tasklist.js","firebase/functions/utils.js","firebase/functions/task.js","components/Task/Task.js","components/TaskList/TaskList.js","components/TaskBoard/TaskBoard.js","components/App/App.js","utils/fontawesome.js","index.js"],"names":["setLogin","boolean","type","setUser","data","showModal","modal","setBoards","boards","setDataBoard","store","createStore","state","action","newState","Object","objectSpread","isLoading","isLogin","dataUser","userBoards","boardData","window","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","auth","GoogleAuthProvider","storage","database","functions","firestore","_callee","user","email","password","regenerator_default","a","wrap","_context","prev","next","getUserData","abrupt","exists","message","t0","setAuthUser","sent","t1","setCollectionUser","uid","stop","id","Promise","resolve","reject","collection","doc","set","then","catch","error","createUserWithEmailAndPassword","authUser","signInWithEmailAndPassword","where","get","querySnapshot","empty","forEach","InputText","props","extra","extraClass","errorClass","react_default","createElement","className","concat","labelText","htmlFor","icon","index_es","placeholder","onKeyUp","onChange","required","defaultValue","value","Button","_ref","text","secondary","terciary","size","onClick","submit","secondaryClass","terciaryClass","sizeClass","iconElement","Loader","connect","dispatch","_useState","useState","isValid","errorMessage","_useState2","slicedToArray","dataLogin","setDataLogin","_useState3","_useState4","dataRegister","setDataRegister","_useState5","_useState6","shake","setShake","_useState7","_useState8","setLoad","_useState9","_useState10","signInLoading","setSignInLoading","_useState11","_useState12","registerLoading","setRegisterLoading","useEffect","localStorage","setTimeout","handleRegister","e","preventDefault","length","_x","_x2","_x3","_createUser","apply","this","arguments","createUser","userResult","setItem","components_Loader_Loader","react_router","from","to","method","components_InputText_InputText","target","components_Button_Button","handleAuth","name","description","userData","refId","setBoard","setUserBoardId","ref","owner","tasklists","update","toConsumableArray","getBoard","getUserBoards","push","filter","_callee2","userRef","_context2","delete","returnButton","undefined","location","pathname","match","react_router_dom","clear","usePortal","rootElemRef","useRef","rootElem","existingParent","document","querySelector","parentElem","rootContainer","setAttribute","createRootElement","body","insertBefore","lastElementChild","nextElementSibling","appendChild","current","remove","childNodes","Modal","children","createPortal","propTypes","PropTypes","element","isRequired","hideModal","title","modalTitle","typeClass","modalRef","style","setProperty","onClose","Textarea","noResizeClass","noResize","splitString","max","slice","modalLoading","setModalLoading","handleRemove","_x4","_x5","_removeBoard","removeBoard","Fragment","components_Modal_Modal","Modal_ModalContent","newBoard","setNewBoard","handleCreateBoard","_createBoard","createBoard","components_Header_Header","map","i","components_BoardCard_BoardCard","key","components_Textarea_Textarea","board","tasklistName","tasklist","setTasklist","tasks","dataId","boardRef","uploadImage","file","hash","generateHash","task","put","on","loading","snapshot","getDownloadURL","downloadURL","deleteImage","fileName","Math","random","toString","substring","setTask","image","indexTasklist","taskImage","taskImageName","tags","comments","picture","imageUrl","updateFirebaseTask","indexTask","updateBoard","boardUpdate","removeFirebaseTask","hasImage","_callee3","_context3","modalRemoveLoading","setModalRemoveLoading","editTask","setEditTask","handleUpdateTask","_x7","_x8","_x9","_x10","_x11","_x12","_x13","_updateTask","updateTask","idTaskList","idTask","handleRemoveTask","_x14","_x15","_x16","_x17","_x18","_removeTask","removeTask","pictureUrl","src","alt","handleRemoveImage","files","reader","FileReader","onloadend","readAsDataURL","handleUpload","newTask","setNewTask","_removeTasklist","removeTasklist","handleCreateNewTask","index","_x6","_createTask","createTask","data-id","components_Task_Task","newTaskList","setNewTasklist","params","handleCreateTaskList","_createTasklist","createTasklist","components_TaskList_TaskList","exact","path","render","components_Login_Login","components_Dashboard_Dashboard","components_TaskBoard_TaskBoard","library","add","faSignInAlt","faColumns","faTimes","faUser","faKey","faEnvelope","faTrash","faAlignLeft","faSpinner","faPencilAlt","faTrashAlt","root","getElementById","ReactDOM","es","component","App"],"mappings":"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","file":"static/js/main.f2b484a7.chunk.js","sourcesContent":["/**\r\n * Reducer actions\r\n */\r\n\r\nexport const setLogin = boolean => ({ type: \"SET_LOGIN\", boolean });\r\nexport const setLoading = boolean => ({ type: \"SET_LOADING\", boolean });\r\nexport const setUser = data => ({ type: \"SET_USER\", data });\r\nexport const showModal = modal => ({ type: \"SHOW_MODAL\", modal });\r\nexport const hideModal = () => ({ type: \"HIDE_MODAL\" });\r\nexport const setBoards = boards => ({ type: \"SET_BOARDS\", boards });\r\nexport const setDataBoard = data => ({ type: \"SET_DATA_BOARD\", data });\r\n\r\n/**\r\n * Reducer\r\n */\r\n\r\nexport const reducer = (state, action) => {\r\n  let newState = { ...state };\r\n\r\n  switch (action.type) {\r\n    case \"SET_LOADING\":\r\n      return { ...newState, isLoading: action.boolean };\r\n\r\n    case \"SET_LOGIN\":\r\n      return { ...newState, isLogin: action.boolean };\r\n\r\n    case \"SET_USER\":\r\n      return { ...newState, dataUser: action.data };\r\n\r\n    case \"SHOW_MODAL\":\r\n      return { ...newState, modal: action.modal };\r\n\r\n    case \"HIDE_MODAL\":\r\n      return { ...newState, modal: null };\r\n\r\n    case \"SET_BOARDS\":\r\n      return { ...newState, userBoards: action.boards };\r\n    \r\n    case \"SET_DATA_BOARD\":\r\n      return { ...newState, boardData: action.data };\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n","import { reducer } from \"./reducer\";\r\nimport { createStore } from \"redux\";\r\n\r\n/**\r\n * Initial state\r\n */\r\n\r\nlet initialState = {\r\n  isLogin: false\r\n};\r\n\r\n/**\r\n * Redux store\r\n */\r\n\r\nexport let store = createStore(\r\n  reducer,\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\r\n);\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n// import \"firebase/database\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/functions\";\r\nimport { firebaseData } from \"./config\";\r\n\r\n// Initialize Firebase\r\nexport const firebaseConfig = {\r\n  apiKey: firebaseData.apiKey,\r\n  authDomain: firebaseData.authDomain,\r\n  databaseURL: firebaseData.databaseURL,\r\n  projectId: firebaseData.projectId,\r\n  storageBucket: firebaseData.storageBucket,\r\n  messagingSenderId: firebaseData.messagingSenderId\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport const storage = firebase.storage();\r\nexport const functions = firebase.functions();\r\nexport const database = firebase.firestore();\r\n\r\nexport default firebase;","// Initialize Firebase\r\nexport const firebaseData = {\r\n  apiKey: \"AIzaSyBX9MFiIyLvo3f9athVr7r9aWCd69mfINA\",\r\n  authDomain: \"trolello-react.firebaseapp.com\",\r\n  databaseURL: \"https://trolello-react.firebaseio.com\",\r\n  projectId: \"trolello-react\",\r\n  storageBucket: \"trolello-react.appspot.com\",\r\n  messagingSenderId: \"682014830422\"\r\n};\r\n","import { auth, database } from \"../firebase\";\r\n\r\n/**\r\n * Funcion para crear usuarios\r\n * @param {string} user\r\n * @param {string} email\r\n * @param {string} password\r\n * @callback callback\r\n */\r\n\r\nexport async function createUser(user, email, password) {\r\n  let dataUser = null;\r\n\r\n  // comprobamos si existe el usuario\r\n  try {\r\n    await getUserData(user);\r\n    return { exists: true, message: \"The user name already exists\" };\r\n  } catch (error) {}\r\n\r\n  // autentificamos\r\n  try {\r\n    dataUser = await setAuthUser(email, password);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n\r\n  // seteamos usuario\r\n  await setCollectionUser(user, email, password, dataUser.user.uid);\r\n  return dataUser;\r\n}\r\n\r\n/**\r\n * Funcion para guardar un nuevo usuario en la colección 'users'\r\n * @param {string} email\r\n * @param {string} password\r\n * @returns {promise}\r\n */\r\n\r\nexport function setCollectionUser(user, email, password, id) {\r\n  return new Promise((resolve, reject) => {\r\n    database\r\n      .collection(\"users\")\r\n      .doc(user)\r\n      .set({\r\n        user: user,\r\n        email: email,\r\n        password: password,\r\n        id: id,\r\n        boards: []\r\n      })\r\n      .then(data => resolve())\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para guardar el nuevo usuario en 'Authenticathion' y autentificarse\r\n * @param {string} email\r\n * @param {string} password\r\n * @returns {promise}\r\n */\r\n\r\nexport function setAuthUser(email, password) {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(data => resolve(data))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para autentificar con un usuario ya creado\r\n * @param {string} user\r\n * @param {string} password\r\n * @returns {promise}\r\n */\r\n\r\nexport function authUser(email, password) {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        return resolve();\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para obtener userPath a traves del userName\r\n * @param {string} user\r\n * @returns {promise}\r\n */\r\n\r\nexport function getUserData(user) {\r\n  return new Promise((resolve, reject) => {\r\n    database\r\n      .collection(\"users\")\r\n      .where(\"user\", \"==\", user)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        return !querySnapshot.empty ? querySnapshot.forEach(doc => resolve(doc.data())) : reject(\"The user not exists\");\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport \"./inputText.scss\";\r\n\r\n/**\r\n * InputText\r\n */\r\n\r\nconst InputText = props => {\r\n  const extra = props.extraClass ? props.extraClass : \"\";\r\n  const errorClass = props.error ? \"c-input-text--error\" : \"\";\r\n\r\n\r\n  \r\n  return (\r\n    <div className={`c-input-text ${errorClass} ${extra}`}>\r\n      {props.labelText && (\r\n        <label className=\"c-input-text__label\" htmlFor={props.id}>\r\n          {props.labelText}\r\n        </label>\r\n      )}\r\n      <div className=\"c-input-text__field\">\r\n        {props.icon && (\r\n          <div className=\"c-input-text__icon\">\r\n            <FontAwesomeIcon icon={props.icon} />\r\n          </div>\r\n        )}\r\n        <input\r\n          type={props.type}\r\n          id={props.id}\r\n          placeholder={props.placeholder}\r\n          onKeyUp={props.onKeyUp}\r\n          onChange={props.onChange}\r\n          required={props.required ? \"required\" : null}\r\n          defaultValue={props.value ? props.value : \"\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nInputText.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  labelText: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onKeyUp: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  extraClass: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  icon: PropTypes.string,\r\n  required: PropTypes.bool\r\n};\r\n\r\nexport default InputText;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport \"./button.scss\";\r\n\r\n/**\r\n * Button\r\n */\r\n\r\nconst Button = ({ text, secondary, terciary, size, extraClass, onClick, icon, submit, isLoading }) => {\r\n  const extra = extraClass ? extraClass : \"\";\r\n\r\n  const secondaryClass = secondary ? \"c-button--secondary\" : \"\";\r\n  const terciaryClass = terciary ? \"c-button--terciary\" : \"\";\r\n  const sizeClass = !size ? \"\" : size === \"small\" ? \"c-button--small\" : \"\";\r\n  const iconElement = icon ? <FontAwesomeIcon icon={icon} className=\"c-button__icon\" /> : \"\";\r\n\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={`c-button ${secondaryClass} ${terciaryClass} ${isLoading ? \"c-button--loading\" : \"\"} ${sizeClass} ${extra}`}\r\n      onClick={onClick}>\r\n      {!isLoading && iconElement}\r\n      {isLoading ? <FontAwesomeIcon icon=\"spinner\" className=\"c-button__load-icon\" /> : null}\r\n      {isLoading ? \"Loading\" : text}\r\n    </button>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  variant: PropTypes.oneOf([\"secondary\", \"terciary\"]),\r\n  size: PropTypes.oneOf([\"small\"]),\r\n  onClick: PropTypes.func,\r\n  icon: PropTypes.string,\r\n  submit: PropTypes.bool,\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport './loader.scss';\r\n\r\n/**\r\n * Loader\r\n */\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-wrap\">\r\n      <div className=\"c-loader\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLogin, setUser } from \"../../redux/reducer\";\r\nimport { createUser, getUserData, authUser } from \"../../firebase/functions/user\";\r\n\r\n// Components\r\nimport InputText from \"../InputText/InputText\";\r\nimport Button from \"../Button/Button\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\n// Styles\r\nimport './login.scss';\r\n\r\n/**\r\n * Login\r\n */\r\n\r\nconst Login = props => {\r\n  /**\r\n   * Component State\r\n   */\r\n\r\n  const [dataLogin, setDataLogin] = useState({\r\n    user: \"\",\r\n    password: \"\",\r\n    isValid: true,\r\n    errorMessage: \"Complete all the fields to login\"\r\n  });\r\n\r\n  const [dataRegister, setDataRegister] = useState({\r\n    user: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    isValid: true,\r\n    errorMessage: \"The register is not complete\"\r\n  });\r\n\r\n  const [shake, setShake] = useState(false);\r\n  const [isLoading, setLoad] = useState(true);\r\n  const [signInLoading, setSignInLoading] = useState(false);\r\n  const [registerLoading, setRegisterLoading] = useState(false);\r\n\r\n  /**\r\n   * Effect\r\n   */\r\n\r\n  /**\r\n   * Comprbamos si hay usuario en localstorage y accedemos\r\n   */\r\n\r\n  useEffect(() => {\r\n    if (localStorage.user) {\r\n      getUserData(localStorage.user).then(data => {\r\n        authUser(data.email, localStorage.password).then(() => {\r\n          props.setUser(data);\r\n          props.setLogin(true);\r\n          setLoad(false);\r\n        });\r\n      });\r\n    } else {\r\n      setLoad(false);\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Reseteamos el estado de shake para que pueda funcionar una y otra vez\r\n   */\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShake(false);\r\n    }, 500);\r\n  }, [shake]);\r\n\r\n  /**\r\n   * Authentication\r\n   */\r\n\r\n  const handleAuth = e => {\r\n    e.preventDefault();\r\n    setSignInLoading(true);\r\n\r\n    // Comprobamos que los datos sean correctos\r\n    if (!dataLogin.user.length || !dataLogin.password.length) {\r\n      setDataLogin({ ...dataLogin, isValid: false });\r\n      setShake(true);\r\n      setSignInLoading(false);\r\n\r\n      // Si los datos son correctos nos logueamos\r\n    } else {\r\n      setDataLogin({ ...dataLogin, isValid: true });\r\n\r\n      getUserData(dataLogin.user)\r\n        .then(data => {\r\n          authUser(data.email, dataLogin.password)\r\n            .then(() => {\r\n              localStorage.setItem(\"user\", dataLogin.user);\r\n              localStorage.setItem(\"password\", dataLogin.password);\r\n              props.setUser({ user: data.user, email: data.email });\r\n              props.setLogin(true);\r\n            })\r\n            .catch(error => {\r\n              setSignInLoading(false);\r\n              setDataLogin({ ...dataLogin, isValid: false, errorMessage: error.message });\r\n              setShake(true);\r\n            });\r\n        })\r\n        .catch(error => {\r\n          setSignInLoading(false);\r\n          setDataLogin({ ...dataLogin, isValid: false, errorMessage: error });\r\n          setShake(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Register\r\n   */\r\n\r\n  const handleRegister = e => {\r\n    e.preventDefault();\r\n    setRegisterLoading(true);\r\n\r\n    // Comprobamos que los datos sean correctos, si no lo son mostramos el error\r\n    if (!dataRegister.user.length || !dataRegister.email.length || !dataRegister.password.length) {\r\n      setDataRegister({ ...dataRegister, isValid: false });\r\n      setShake(true);\r\n      setRegisterLoading(false);\r\n\r\n      // Si los datos son correctos registramos, antes comporbando si el usuario ya existe\r\n    } else {\r\n      createUser(dataRegister.user, dataRegister.email, dataRegister.password).then(userResult => {\r\n        // Si el usuario ya existe\r\n        if (userResult.message) {\r\n          setDataRegister({ ...dataRegister, isValid: false, errorMessage: userResult.message });\r\n          setShake(true);\r\n          setRegisterLoading(false);\r\n\r\n          // Si no existe accedemos\r\n        } else {\r\n          setDataRegister({ ...dataRegister, isValid: true });\r\n          props.setUser({ user: dataRegister.user, email: dataRegister.email });\r\n          props.setLogin(true);\r\n          localStorage.setItem(\"user\", dataRegister.user);\r\n          localStorage.setItem(\"password\", dataRegister.password);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render\r\n   */\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  } else if (props.state.isLogin) {\r\n    return <Redirect from=\"/trollelo/\" to=\"/trollelo/dashboard\" />;\r\n  } else {\r\n    return (\r\n      <section className=\"login-wrap\">\r\n        <header className=\"login-wrap__header\">\r\n          <h1 className=\"login-wrap__header__brand\">Trolello</h1>\r\n        </header>\r\n\r\n        <main className={`login ${shake === true ? \"login--shake\" : \"\"}`}>\r\n          <form className=\"login__form\" method=\"POST\">\r\n            <h2 className=\"login__title\">Sign in</h2>\r\n            <InputText\r\n              type=\"text\"\r\n              id=\"signInUser\"\r\n              placeholder=\"User\"\r\n              extraClass=\"margin-bottom-10\"\r\n              icon=\"user\"\r\n              onKeyUp={e => setDataLogin({ ...dataLogin, user: e.target.value })}\r\n              error={dataLogin.isValid === false && !dataLogin.user.length ? true : false}\r\n              required={true}\r\n            />\r\n\r\n            <InputText\r\n              type=\"password\"\r\n              id=\"signInPassword\"\r\n              placeholder=\"Password\"\r\n              extraClass=\"margin-bottom-20\"\r\n              icon=\"key\"\r\n              onKeyUp={e => setDataLogin({ ...dataLogin, password: e.target.value })}\r\n              error={dataLogin.isValid === false && !dataLogin.password.length ? true : false}\r\n              required={true}\r\n            />\r\n\r\n            <Button text=\"Log in\" onClick={e => handleAuth(e)} isLoading={signInLoading} />\r\n\r\n            {dataLogin.isValid === false && <p className=\"color-orange bold padding-top-20\">{dataLogin.errorMessage}</p>}\r\n          </form>\r\n          <form className=\"login__form\" method=\"POST\">\r\n            <h2 className=\"login__title\">Register</h2>\r\n            <InputText\r\n              type=\"text\"\r\n              id=\"registerUser\"\r\n              placeholder=\"User\"\r\n              icon=\"user\"\r\n              extraClass=\"margin-bottom-10\"\r\n              onKeyUp={e => setDataRegister({ ...dataRegister, user: e.target.value })}\r\n              error={dataRegister.isValid === false && !dataRegister.user.length ? true : false}\r\n              required={true}\r\n            />\r\n            <InputText\r\n              type=\"email\"\r\n              id=\"registerEmail\"\r\n              placeholder=\"Email\"\r\n              icon=\"envelope\"\r\n              extraClass=\"margin-bottom-10\"\r\n              onKeyUp={e => setDataRegister({ ...dataRegister, email: e.target.value })}\r\n              error={!dataRegister.isValid && !dataRegister.email.length ? true : false}\r\n              required={true}\r\n            />\r\n            <InputText\r\n              type=\"password\"\r\n              id=\"registerPassword\"\r\n              placeholder=\"Password\"\r\n              icon=\"key\"\r\n              extraClass=\"margin-bottom-20\"\r\n              onKeyUp={e => setDataRegister({ ...dataRegister, password: e.target.value })}\r\n              error={dataRegister.isValid === false && !dataRegister.password.length ? true : false}\r\n              required={true}\r\n            />\r\n            <Button text=\"Register\" type=\"secondary\" onClick={e => handleRegister(e)} isLoading={registerLoading} />\r\n\r\n            {dataRegister.isValid === false && <p className=\"color-orange bold padding-top-20\">{dataRegister.errorMessage}</p>}\r\n          </form>\r\n        </main>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  setLogin: boolean => dispatch(setLogin(boolean)),\r\n  setUser: data => dispatch(setUser(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import { database } from \"../firebase\";\r\nimport { getUserData } from \"./user\";\r\n\r\n/**\r\n * Funcion para Crear un board a partir del userName.\r\n * @param {string} user\r\n * @param {string} name\r\n * @param {string} description\r\n * @returns {promise}\r\n */\r\n\r\nexport async function createBoard(user, name, description) {\r\n  const userData = await getUserData(user);\r\n  const refId = await setBoard(user, name, description);\r\n  await setUserBoardId(userData.boards, refId, userData.user);\r\n}\r\n\r\n/**\r\n * Funcion para setear el board en la colección de boards.\r\n * @param {string} user\r\n * @param {string} name\r\n * @param {string} description\r\n * @returns {promise}\r\n */\r\n\r\nfunction setBoard(user, name, description) {\r\n  return new Promise((resolve, reject) => {\r\n    const ref = database.collection(\"boards\").doc();\r\n    ref\r\n      .set({\r\n        owner: user,\r\n        name: name,\r\n        description: description,\r\n        id: ref.id,\r\n        tasklists: []\r\n      })\r\n      .then(() => resolve(ref.id))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para setear el id de la board creada en el usuario\r\n * @param {string} data\r\n * @param {string} id\r\n * @param {string} user\r\n * @returns {promise}\r\n */\r\n\r\nfunction setUserBoardId(data, id, user) {\r\n  return new Promise((resolve, reject) => {\r\n    const userRef = database.collection(\"users\").doc(user);\r\n    userRef\r\n      .update({ boards: [...data, id] })\r\n      .then(() => resolve())\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para obtener un 'board'\r\n * @param {string} id\r\n * @returns {promise}\r\n */\r\n\r\nexport function getBoard(id) {\r\n  return new Promise((resolve, reject) => {\r\n    database\r\n      .collection(\"boards\")\r\n      .doc(id)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        return resolve(querySnapshot.data());\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para obtener todos los 'boards'\r\n * @param {string} id\r\n * @returns {promise}\r\n */\r\n\r\n// Refactor de rendimiento\r\nexport function getUserBoards(user) {\r\n  return new Promise((resolve, reject) => {\r\n    // Obtenemos todas las 'boards'\r\n    database\r\n      .collection(\"boards\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        // Las filtramos para obtener solo las de el usuario\r\n        let boards = [];\r\n        querySnapshot.forEach(doc => {\r\n          boards.push(doc.data());\r\n        });\r\n        return !querySnapshot.empty ? resolve(boards.filter(e => e.owner === user)) : reject(\"no boards\");\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para Borrar un 'board' del usuario\r\n * @param {string} id\r\n * @param {string} user\r\n * @returns {promise}\r\n */\r\n\r\nexport async function removeBoard(id, user) {\r\n  const userRef = database.collection(\"users\").doc(user);\r\n\r\n  await database\r\n    .collection(\"boards\")\r\n    .doc(id)\r\n    .delete();\r\n\r\n  const userData = await getUserData(user);\r\n  await userRef.update({ boards: userData.boards.filter(e => e !== id) });\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLogin, setUser, setBoards } from \"../../redux/reducer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Components\r\nimport Button from \"../Button/Button\";\r\n\r\n// Styles\r\nimport \"./header.scss\";\r\n\r\n/**\r\n * Header\r\n */\r\n\r\nconst Header = props => {\r\n  /**\r\n   * Logout function\r\n   */\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    props.setLogin(false);\r\n    props.setUser(null);\r\n    props.setBoards(null);\r\n  };\r\n\r\n  // Taskboard return button\r\n  let returnButton = null;\r\n  if (props.location !== undefined && props.location.pathname.match(\"TaskBoard\")) {\r\n    returnButton = (\r\n      <div className=\"c-header__return-btn\">\r\n        <Link to={`/trollelo/dashboard`}>\r\n          <FontAwesomeIcon icon=\"align-left\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header className=\"c-header\">\r\n      <div className=\"c-header__wrap\">\r\n        {returnButton}\r\n        <h1 className=\"c-header__logo\">\r\n          <Link to={`/trollelo/dashboard`}>Trollelo</Link>\r\n        </h1>\r\n        <div className=\"c-header__actions\">\r\n          <Button secondary text=\"logOut\" size=\"small\" icon=\"sign-in-alt\" onClick={() => logOut()} />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  setLogin: boolean => dispatch(setLogin(boolean)),\r\n  setUser: data => dispatch(setUser(data)),\r\n  setBoards: boards => dispatch(setBoards(boards))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","/** Credits: https://www.jayfreestone.com/writing/react-portals-with-hooks/ */\r\n\r\nimport { useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * Creates DOM element to be used as React root.\r\n * @returns {HTMLElement}\r\n */\r\n\r\nfunction createRootElement(id) {\r\n  const rootContainer = document.createElement(\"div\");\r\n  rootContainer.setAttribute(\"id\", id);\r\n  return rootContainer;\r\n}\r\n\r\n/**\r\n * Appends element as last child of body.\r\n * @param {HTMLElement} rootElem\r\n */\r\n\r\nfunction addRootElement(rootElem) {\r\n  document.body.insertBefore(rootElem, document.body.lastElementChild.nextElementSibling);\r\n}\r\n\r\n/**\r\n * Hook to create a React Portal.\r\n * Automatically handles creating and tearing-down the root elements (no SRR\r\n * makes this trivial), so there is no need to ensure the parent target already\r\n * exists.\r\n * @example\r\n * const target = usePortal(id, [id]);\r\n * return createPortal(children, target);\r\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\r\n * @returns {HTMLElement} The DOM node to use as the Portal target.\r\n */\r\n\r\nfunction usePortal(id) {\r\n  const rootElemRef = useRef(null);\r\n\r\n  useEffect(function setupElement() {\r\n    // Look for existing target dom element to append to\r\n    const existingParent = document.querySelector(`#${id}`);\r\n    // Parent is either a new root or the existing dom element\r\n    const parentElem = existingParent || createRootElement(id);\r\n\r\n    // If there is no existing DOM element, add a new one.\r\n    if (!existingParent) {\r\n      addRootElement(parentElem);\r\n    }\r\n\r\n    // Add the detached element to the parent\r\n    parentElem.appendChild(rootElemRef.current);\r\n\r\n    return function removeElement() {\r\n      rootElemRef.current.remove();\r\n      if (parentElem.childNodes.length === -1) {\r\n        parentElem.remove();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * It's important we evaluate this lazily:\r\n   * - We need first render to contain the DOM element, so it shouldn't happen\r\n   *   in useEffect. We would normally put this in the constructor().\r\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\r\n   *   since this will run every single render (that's a lot).\r\n   * - We want the ref to consistently point to the same DOM element and only\r\n   *   ever run once.\r\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\r\n   */\r\n  function getRootElem() {\r\n    if (!rootElemRef.current) {\r\n      rootElemRef.current = document.createElement(\"div\");\r\n    }\r\n    return rootElemRef.current;\r\n  }\r\n\r\n  return getRootElem();\r\n}\r\n\r\nexport default usePortal;\r\n","import { createPortal } from \"react-dom\";\r\nimport usePortal from \"../../hooks/usePortal/usePortal\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Modal\r\n */\r\n\r\nconst Modal = ({ children }) => {\r\n  const target = usePortal(\"modal\");\r\n  return createPortal(children, target);\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../redux/reducer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Styles\r\nimport \"./modal.scss\";\r\n\r\n/**\r\n * ModalContent\r\n */\r\n\r\nexport const ModalContent = props => {\r\n  const title = props.modalTitle ? <h2 className=\"c-modal__title\">{props.modalTitle}</h2> : \"\";\r\n  const typeClass = props.type === \"small\" ? \"c-modal__container--small\" : \"\";\r\n\r\n  const modalRef = useRef();\r\n\r\n  /**\r\n   * Efecto de opacidad al aparecer\r\n   */\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => modalRef.current.style.setProperty(\"--modal-opacity\", 1), 100);\r\n    return () => {\r\n      modalRef.current.style.setProperty(\"--modal-opacity\", 0);\r\n    };\r\n  }, []);\r\n\r\n  const hideModalComponent = () => {\r\n    modalRef.current.style.setProperty(\"--modal-opacity\", 0);\r\n    setTimeout(() => {\r\n      props.hideModal();\r\n      if (props.onClose) props.onClose();\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"c-modal\" ref={modalRef}>\r\n      <div className={`c-modal__container ${typeClass}`}>\r\n        {title}\r\n        {props.children}\r\n        <FontAwesomeIcon icon=\"times\" className=\"c-modal__button-close\" onClick={() => hideModalComponent()} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nModalContent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  modalTitle: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  type: PropTypes.oneOf([\"small\"])\r\n};\r\n\r\n/**\r\n * Redux connection\r\n */\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  hideModal: () => dispatch(hideModal())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ModalContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport \"./textarea.scss\";\r\n\r\n/**\r\n * Textarea\r\n */\r\n\r\nconst Textarea = props => {\r\n  const noResizeClass = props.noResize ? \"c-textarea--no-resize\" : \"\";\r\n  const extra = props.extraClass ? props.extraClass : \"\";\r\n  const errorClass = props.error ? \"c-textarea--error\" : \"\";\r\n\r\n  return (\r\n    <div className=\"c-textarea\">\r\n      {props.labelText && (\r\n        <label className=\"c-textarea__label\" htmlFor={props.id}>\r\n          {props.labelText}\r\n        </label>\r\n      )}\r\n      <textarea\r\n        className={`c-textarea__field ${errorClass} ${noResizeClass} ${extra}`}\r\n        placeholder={props.placeholder}\r\n        onKeyUp={props.onKeyUp}\r\n        defaultValue={props.value ? props.value : \"\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nTextarea.propTypes = {\r\n  extraClass: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onKeyUp: PropTypes.func,\r\n  noResize: PropTypes.bool,\r\n  error: PropTypes.bool\r\n};\r\n\r\nexport default Textarea;\r\n","/**\r\n * Funcion para limitar caracteres\r\n * @param {string} text\r\n * @param {number} max\r\n * @returns {string}\r\n */\r\n\r\nexport function splitString(text, max) {\r\n  return text.length >= max ? `${text.slice(0, max)}...` : text;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { removeBoard, getUserBoards } from \"../../firebase/functions/board\";\r\nimport { showModal, hideModal, setBoards } from \"../../redux/reducer\";\r\nimport { splitString } from \"../../utils/utilsFunctions\";\r\n\r\n// Styles\r\nimport \"./boardCard.scss\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport Button from \"../Button/Button\";\r\n\r\n/**\r\n * BoardCard\r\n */\r\n\r\nconst BoardCard = props => {\r\n  // State para setear el loader del modal\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n\r\n  const handleRemove = e => {\r\n    e.preventDefault();\r\n    setModalLoading(true);\r\n\r\n    removeBoard(props.id, props.state.dataUser.user).then(() => {\r\n      getUserBoards(props.state.dataUser.user)\r\n        .then(data => {\r\n          setModalLoading(false);\r\n          props.hideModal();\r\n          props.setBoards(data);\r\n        })\r\n        .catch(() => props.setBoards([]));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <figure className=\"c-board-card\">\r\n        <h3 className=\"c-board-card__name\">\r\n          <Link to={`/trollelo/TaskBoard/${props.id}`}>{props.name}</Link>\r\n        </h3>\r\n        <p> {splitString(props.description, 250)} </p>\r\n        <div className=\"c-board-card__delete\" onClick={() => props.showModal(`modal-remove-board${props.id}`)}>\r\n          <FontAwesomeIcon icon=\"trash\" />\r\n          Remove\r\n        </div>\r\n      </figure>\r\n\r\n      {props.state.modal === `modal-remove-board${props.id}` && (\r\n        <Modal>\r\n          <ModalContent modalTitle=\"Remove board\" type=\"small\">\r\n            <form>\r\n              <p className=\"margin-bottom-20\">\r\n                <span className=\"bold\">Are you sure</span> to remove this Board?\r\n              </p>\r\n              <Button text=\"Remove Board\" onClick={e => handleRemove(e)} isLoading={modalLoading} />\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nBoardCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired\r\n};\r\n\r\n/**\r\n * Redux connection\r\n */\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setBoards: boards => dispatch(setBoards(boards))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BoardCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { showModal, hideModal, setBoards } from \"../../redux/reducer\";\r\nimport { createBoard, getUserBoards } from \"../../firebase/functions/board\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Components\r\nimport Header from \"../Header/Header\";\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport Textarea from \"../Textarea/Textarea\";\r\nimport BoardCard from \"../BoardCard/BoardCard\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\n// Styles\r\nimport \"./dashboard.scss\";\r\n\r\n/**\r\n * Dashboard\r\n */\r\n\r\nconst Dashboard = props => {\r\n  /**\r\n   * Local State\r\n   */\r\n\r\n  const [newBoard, setNewBoard] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    errorMessage: \"Complete all the fields\",\r\n    isValid: true\r\n  });\r\n\r\n  const [isLoading, setLoad] = useState(true);\r\n\r\n  // State para setear el loader del modal\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n\r\n  /**\r\n   * Obtenemos todos los usuarios\r\n   */\r\n\r\n  useEffect(() => {\r\n    if (props.state.isLogin) {\r\n      getUserBoards(props.state.dataUser.user)\r\n        .then(data => {\r\n          props.setBoards(data);\r\n          setLoad(false);\r\n        })\r\n        .catch(error => {\r\n          props.setBoards([]);\r\n          setLoad(false);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Creamos/cerramos el modal\r\n   */\r\n\r\n  const handleCreateBoard = e => {\r\n    e.preventDefault();\r\n\r\n    if (newBoard.name.length !== 0 && newBoard.description.length !== 0) {\r\n      // Creamos un 'board' con el usuario de redux y los datos del formulario local.\r\n      // Seteamos el 'board' en el state local y cerramos el modal\r\n\r\n      setModalLoading(true);\r\n      setNewBoard({ ...newBoard, errorMessage: \"\" });\r\n\r\n      createBoard(props.state.dataUser.user, newBoard.name, newBoard.description).then(data => {\r\n        setNewBoard({ ...newBoard, isValid: true, name: \"\", description: \"\" });\r\n        props.hideModal();\r\n        setModalLoading(false);\r\n\r\n        // obtenemos la lista de 'boards' actualizadas\r\n        // Seteamos el 'board' en redux\r\n\r\n        getUserBoards(props.state.dataUser.user)\r\n          .then(data => {\r\n            props.setBoards(data);\r\n          })\r\n          .catch(() => props.setBoards([]));\r\n      });\r\n    } else {\r\n      setModalLoading(false);\r\n      setNewBoard({ ...newBoard, isValid: false });\r\n    }\r\n  };\r\n\r\n  const handleCloseNewBoard = () => {\r\n    setNewBoard({ ...newBoard, name: \"\", description: \"\", isValid: true });\r\n  };\r\n\r\n  if (!props.state.isLogin) {\r\n    return <Redirect from=\"/\" to=\"/login\" />;\r\n  } else if (isLoading) {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <Loader />\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n\r\n        <main className=\"dashboard\">\r\n          <header className=\"subheader\">\r\n            <div className=\"subheader__content\">\r\n              <span className=\"subheader__icon\">\r\n                <FontAwesomeIcon icon=\"align-left\" />\r\n              </span>\r\n\r\n              <div className=\"subheader__title\">\r\n                <h2>My Dashboard</h2>\r\n                <span className=\"subheader__title__user\">User: {props.state.dataUser.user}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"subheader__actions\">\r\n              <Button text=\"New Board\" onClick={() => props.showModal(\"new-board\")} />\r\n            </div>\r\n          </header>\r\n          <section className=\"dashboard__table\">\r\n            {props.state.userBoards &&\r\n              props.state.userBoards.map((e, i) => {\r\n                return (\r\n                  <BoardCard\r\n                    key={i}\r\n                    name={props.state.userBoards[i].name}\r\n                    description={props.state.userBoards[i].description}\r\n                    id={props.state.userBoards[i].id}\r\n                  />\r\n                );\r\n              })}\r\n\r\n            {props.state.modal === \"new-board\" && (\r\n              <Modal>\r\n                <ModalContent modalTitle=\"Add new board\" type=\"small\" onClose={() => handleCloseNewBoard()}>\r\n                  <form method=\"POST\">\r\n                    <InputText\r\n                      type=\"text\"\r\n                      id=\"newBoardName\"\r\n                      placeholder=\"Board Name\"\r\n                      icon=\"columns\"\r\n                      extraClass=\"margin-bottom-10\"\r\n                      onKeyUp={e => setNewBoard({ ...newBoard, name: e.target.value })}\r\n                      error={newBoard.isValid === false && !newBoard.name.length ? true : false}\r\n                      required={true}\r\n                    />\r\n                    <Textarea\r\n                      placeholder=\"Description\"\r\n                      noResize={true}\r\n                      extraClass=\"margin-bottom-20\"\r\n                      onKeyUp={e => setNewBoard({ ...newBoard, description: e.target.value })}\r\n                      error={newBoard.isValid === false && !newBoard.description.length ? true : false}\r\n                      required={true}\r\n                    />\r\n                    <Button text=\"Create Board\" onClick={e => handleCreateBoard(e)}  isLoading={modalLoading} />\r\n                    {newBoard.isValid === false && <p className=\"color-orange bold padding-top-20\">{newBoard.errorMessage}</p>}\r\n                  </form>\r\n                </ModalContent>\r\n              </Modal>\r\n            )}\r\n          </section>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setBoards: boards => dispatch(setBoards(boards))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import { database } from \"../firebase\";\r\nimport { getBoard } from \"./board\";\r\n\r\n/**\r\n * Funcion para Crear una taskList a partir del userName.\r\n * @param {string} user\r\n * @param {string} board\r\n * @param {string} tasklistName\r\n * @returns {promise}\r\n */\r\n\r\nexport async function createTasklist(user, board, tasklistName) {\r\n  const boardData = await getBoard(board);\r\n  const tasklist = await setTasklist(user, board, tasklistName, boardData.tasklists);\r\n  return tasklist;\r\n}\r\n\r\n/**\r\n * Funcion para setear una tasklist\r\n * @param {string} title\r\n * @param {array} data\r\n * @returns {promise}\r\n */\r\n\r\nexport function setTasklist(user, board, title, data) {\r\n  return new Promise((resolve, reject) => {\r\n    const tasklist = {\r\n      title: title,\r\n      owner: user,\r\n      tasks: []\r\n    };\r\n\r\n    database\r\n      .collection(\"boards\")\r\n      .doc(board)\r\n      .update({ tasklists: [...data, tasklist] })\r\n      .then(() => resolve(tasklist))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para Borrar un 'tasklist'\r\n * @param {string} id\r\n * @param {string} user\r\n * @returns {promise}\r\n */\r\n\r\nexport async function removeTasklist(dataId, board) {\r\n  const boardRef = database.collection(\"boards\").doc(board);\r\n\r\n  let boardData = await getBoard(board);\r\n  await boardRef.update({ tasklists: boardData.tasklists.filter((e, i) => i !== dataId) });\r\n  boardData = await getBoard(board);\r\n\r\n  return boardData.tasklists;\r\n}\r\n","import { storage } from \"../firebase\";\r\n\r\n/**\r\n * Funcion subir una imagen\r\n * @param {string} user\r\n * @param {file} file\r\n * @returns {string} image Url\r\n */\r\n\r\nexport function uploadImage(user, file) {\r\n  return new Promise((resolve, reject) => {\r\n    const hash = generateHash();\r\n    const storageRef = storage.ref(`images/${user}/${hash}${file.name}`);\r\n    const task = storageRef.put(file);\r\n\r\n    task.on(\r\n      \"state_changed\",\r\n      loading => {},\r\n      error => {\r\n        reject(error);\r\n      },\r\n      () => {\r\n        task.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n          resolve({ downloadURL, name: `${hash}${file.name}` });\r\n        });\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para borrar una imagen\r\n * @param {string} user\r\n * @param {file} fileName\r\n * @returns {promise}\r\n */\r\n\r\nexport function deleteImage(user, fileName) {\r\n  return new Promise((resolve, reject) => {\r\n    const deleteRef = storage.ref(`images/${user}/${fileName}`);\r\n    deleteRef\r\n      .delete()\r\n      .then(() => resolve())\r\n      .catch(error => reject());\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion que genera hash para las imagenes\r\n * @returns {string}\r\n */\r\n\r\nexport const generateHash = () => {\r\n  return (\r\n    Math.random()\r\n      .toString(6)\r\n      .substring(2, 7) +\r\n    Math.random()\r\n      .toString(6)\r\n      .substring(2, 7)\r\n  );\r\n};\r\n","import { database } from \"../firebase\";\r\nimport { getBoard } from \"./board\";\r\nimport { uploadImage, deleteImage } from \"./utils\";\r\n\r\n/**\r\n * Funcion para setear la task dentro de su tasklist\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {object} boardData\r\n * @param {number} indexTasklist\r\n * @returns {promise}\r\n */\r\n\r\nexport function setTask(title, description, image, user, boardData, indexTasklist) {\r\n  const ref = database.collection(\"boards\").doc(boardData.id);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const task = {\r\n      title: title,\r\n      description: description,\r\n      owner: user,\r\n      image: {\r\n        taskImage: image ? image.downloadURL : null,\r\n        taskImageName: image ? image.name : null\r\n      },\r\n      tags: [],\r\n      comments: []\r\n    };\r\n\r\n    boardData.tasklists[indexTasklist].tasks = [...boardData.tasklists[indexTasklist].tasks, task];\r\n\r\n    ref\r\n      .set(boardData)\r\n      .then(() => resolve(boardData))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para crear una task\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {string} board\r\n * @param {number} indexTasklist\r\n * @returns {promise}\r\n */\r\n\r\nexport async function createTask(title, description, picture, user, board, indexTasklist) {\r\n  const boardData = await getBoard(board);\r\n  const imageUrl = picture !== null ? await uploadImage(user, picture) : null;\r\n  const task = await setTask(title, description, imageUrl, user, boardData, indexTasklist);\r\n  return task;\r\n}\r\n\r\n/**\r\n * Funcion para udpatear la task\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {object} boardData\r\n * @param {number} indexTasklist\r\n * @param {number} indexTask\r\n * @returns {promise}\r\n */\r\n\r\nexport function updateFirebaseTask(title, description, image, user, boardData, indexTasklist, indexTask) {\r\n  const ref = database.collection(\"boards\").doc(boardData.id);\r\n  let updateBoard = boardData;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const task = {\r\n      title: title,\r\n      description: description,\r\n      owner: user,\r\n      image: {\r\n        taskImage: image ? image.downloadURL : null,\r\n        taskImageName: image ? image.name : null\r\n      },\r\n      tags: [],\r\n      comments: []\r\n    };\r\n\r\n    updateBoard.tasklists[indexTasklist].tasks[indexTask] = task;\r\n\r\n    ref\r\n      .set(updateBoard)\r\n      .then(() => resolve(updateBoard))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion Update\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {string} board\r\n * @param {number} indexTasklist\r\n * @param {number} indexTask\r\n * @returns {promise}\r\n */\r\n\r\nexport async function updateTask(title, description, picture, user, board, indexTasklist, indexTask) {\r\n  const boardData = await getBoard(board);\r\n  const image = picture !== null ? await uploadImage(user, picture) : null;\r\n  const boardUpdate = await updateFirebaseTask(title, description, image, user, boardData, indexTasklist, indexTask);\r\n  return { boardUpdate, image };\r\n}\r\n\r\n/**\r\n * Funcion para borrar la task\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {object} boardData\r\n * @param {number} indexTasklist\r\n * @param {number} indexTask\r\n * @returns {promise}\r\n */\r\n\r\nexport function removeFirebaseTask(boardData, indexTasklist, indexTask) {\r\n  const ref = database.collection(\"boards\").doc(boardData.id);\r\n  let updateBoard = boardData;\r\n  const hasImage = boardData.tasklists[indexTasklist].tasks[indexTask].taskImage ? true : false;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    updateBoard.tasklists[indexTasklist].tasks = updateBoard.tasklists[indexTasklist].tasks.filter((e, i) => i !== indexTask);\r\n    ref\r\n      .set(updateBoard)\r\n      .then(() => resolve(updateBoard, hasImage))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion remove\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {string} board\r\n * @param {number} indexTasklist\r\n * @param {number} indexTask\r\n * @returns {promise}\r\n */\r\n\r\nexport async function removeTask(board, indexTasklist, indexTask, user, fileName) {\r\n  const boardData = await getBoard(board);\r\n  const task = await removeFirebaseTask(boardData, indexTasklist, indexTask);\r\n  if (task.hasImage) await deleteImage(user, fileName);\r\n  return task;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal, hideModal, setDataBoard } from \"../../redux/reducer\";\r\nimport { updateTask, removeTask } from \"../../firebase/functions/task\";\r\nimport { splitString } from \"../../utils/utilsFunctions\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport Button from \"../Button/Button\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport Textarea from \"../Textarea/Textarea\";\r\n\r\n// Styles\r\nimport \"./task.scss\";\r\n\r\n/**\r\n * Button\r\n */\r\n\r\nconst Task = props => {\r\n  /**\r\n   * State para setear el loader del modal\r\n   */\r\n\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  const [modalRemoveLoading, setModalRemoveLoading] = useState(false);\r\n\r\n  /**\r\n   * Creamos el estado local de la task para pintarla y que se actualice\r\n   */\r\n\r\n  const [editTask, setEditTask] = useState({\r\n    title: props.task.title,\r\n    description: props.task.description,\r\n    picture: null,\r\n    imageUrl: props.task.image.taskImage,\r\n    errorMessage: \"Complete the title field\",\r\n    isValid: true\r\n  });\r\n\r\n  /**\r\n   * Update task\r\n   */\r\n\r\n  const handleUpdateTask = e => {\r\n    e.preventDefault();\r\n    setModalLoading(true);\r\n\r\n    if (editTask.title.length) {\r\n      setModalLoading(true);\r\n      updateTask(\r\n        editTask.title,\r\n        editTask.description,\r\n        editTask.picture,\r\n        props.state.dataUser.user,\r\n        props.state.boardData.id,\r\n        props.idTaskList,\r\n        props.idTask\r\n      ).then(data => {\r\n        props.setDataBoard(data.boardUpdate);\r\n        setEditTask({ ...editTask, imageUrl: data.image ? data.image.downloadURL : null });\r\n        setModalLoading(false);\r\n        props.hideModal();\r\n      });\r\n    } else {\r\n      setModalLoading(false);\r\n      setEditTask({ ...editTask, isValid: false });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove task\r\n   */\r\n\r\n  const handleRemoveTask = e => {\r\n    e.preventDefault();\r\n    setModalRemoveLoading(true);\r\n    const fileName = props.state.boardData.tasklists[props.idTaskList].tasks[props.idTask].image.taskImageName;\r\n\r\n    removeTask(props.state.boardData.id, props.idTaskList, props.idTask, props.state.dataUser.user, fileName).then(data => {\r\n      setModalRemoveLoading(false);\r\n      props.setDataBoard(data);\r\n      props.hideModal();\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Uplaod image\r\n   */\r\n\r\n  const handleUpload = e => {\r\n    const file = e.target.files[0];\r\n    if (file.type === \"image/png\" || file.type === \"image/jpeg\") {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => setEditTask({ ...editTask, picture: file });\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setEditTask({ ...editTask, errorMessage: \"Invalid file format\" });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove Image\r\n   */\r\n\r\n  const handleRemoveImage = e => {\r\n    e.preventDefault();\r\n    setEditTask({ ...editTask, imageUrl: null, picture: null });\r\n  };\r\n\r\n  /**\r\n   * Cierre without save\r\n   */\r\n\r\n  const handleCloseEditTask = () => {\r\n    setEditTask({\r\n      ...editTask,\r\n      title: props.task.title,\r\n      description: props.task.description,\r\n      picture: null,\r\n      imageUrl: props.task.image.taskImage,\r\n      isValid: true\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Render\r\n   */\r\n  const pictureUrl = props.state.boardData.tasklists[props.idTaskList].tasks[props.idTask].image.taskImage;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"c-task\" onClick={e => props.showModal(`task-${props.idTask}${props.idTaskList}`)}>\r\n        {pictureUrl && <img className=\"c-task__picture\" src={pictureUrl} alt=\"alt\" />}\r\n        <h3 className=\"c-task__title\">{splitString(props.task.title, 150)}</h3>\r\n      </div>\r\n\r\n      {/* Modal edit tasklist */}\r\n\r\n      {props.state.modal === `task-${props.idTask}${props.idTaskList}` && (\r\n        <Modal>\r\n          <ModalContent modalTitle={editTask.title} onClose={() => handleCloseEditTask()}>\r\n            <form method=\"POST\">\r\n              <InputText\r\n                type=\"text\"\r\n                id=\"taskTitle\"\r\n                labelText=\"Title:\"\r\n                icon=\"columns\"\r\n                extraClass=\"margin-bottom-20\"\r\n                required={true}\r\n                error={editTask.isValid === false && !editTask.title.length ? true : false}\r\n                value={editTask.title}\r\n                onKeyUp={e => setEditTask({ ...editTask, title: e.target.value })}\r\n              />\r\n\r\n              <Textarea\r\n                labelText=\"Description:\"\r\n                extraClass=\"margin-bottom-20\"\r\n                value={editTask.description}\r\n                onKeyUp={e => setEditTask({ ...editTask, description: e.target.value })}\r\n              />\r\n\r\n              {editTask.imageUrl && (\r\n                <div className=\"c-task__update__image\">\r\n                  <p className=\"bold\">Image:</p>\r\n                  <img src={editTask.imageUrl} alt={editTask.title} />\r\n                  <Button\r\n                    extraClass=\"c-task__update__image__remove\"\r\n                    text=\"Remove Image\"\r\n                    secondary\r\n                    size=\"small\"\r\n                    onClick={e => handleRemoveImage(e)}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {!editTask.imageUrl && (\r\n                <InputText\r\n                  type=\"file\"\r\n                  id=\"imageTask\"\r\n                  labelText=\"Image:\"\r\n                  icon=\"columns\"\r\n                  extraClass=\"margin-bottom-20\"\r\n                  onChange={e => handleUpload(e)}\r\n                />\r\n              )}\r\n\r\n              <Button text=\"Update task\" onClick={e => handleUpdateTask(e)} isLoading={modalLoading} />\r\n              <Button\r\n                text=\"Remove task\"\r\n                extraClass=\"margin-left-10\"\r\n                secondary\r\n                onClick={e => handleRemoveTask(e)}\r\n                isLoading={modalRemoveLoading}\r\n              />\r\n\r\n              {editTask.isValid === false && <p className=\"color-orange bold padding-top-20\">{editTask.errorMessage}</p>}\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nTask.propTypes = {\r\n  task: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setDataBoard: data => dispatch(setDataBoard(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Task);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { showModal, hideModal, setDataBoard } from \"../../redux/reducer\";\r\nimport { removeTasklist } from \"../../firebase/functions/tasklist\";\r\nimport { createTask } from \"../../firebase/functions/task\";\r\nimport { splitString } from \"../../utils/utilsFunctions\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport Button from \"../Button/Button\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport Textarea from \"../Textarea/Textarea\";\r\nimport Task from \"../Task/Task\";\r\n\r\n// Styles\r\nimport \"./taskList.scss\";\r\n\r\n/**\r\n * TaskList\r\n */\r\n\r\nconst TaskList = props => {\r\n  // State para setear el loader del modal\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  const [newTask, setNewTask] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    errorMessage: \"Complete the title field\",\r\n    isValid: true,\r\n    picture: null\r\n  });\r\n\r\n  /**\r\n   * Remove task\r\n   */\r\n\r\n  const handleRemove = e => {\r\n    e.preventDefault();\r\n    setModalLoading(true);\r\n\r\n    removeTasklist(props.id, props.state.boardData.id).then(data => {\r\n      props.hideModal();\r\n      setModalLoading(false);\r\n      props.setDataBoard({ ...props.state.boardData, tasklists: data });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Close task\r\n   */\r\n\r\n  const handleCloseNewTask = () => {\r\n    setNewTask({ ...newTask, title: \"\", description: \"\", isValid: true });\r\n  };\r\n\r\n  /**\r\n   * Update tasks\r\n   */\r\n\r\n  \r\n\r\n  /**\r\n   * Create new task\r\n   */\r\n\r\n  const handleCreateNewTask = (e, index) => {\r\n    e.preventDefault();\r\n    setModalLoading(true);\r\n\r\n    if (newTask.title.length) {\r\n      setModalLoading(true);\r\n      setNewTask({ ...newTask, errorMessage: \"\" });\r\n\r\n      // Creamos la tarea en firestore\r\n      createTask(\r\n        newTask.title,\r\n        newTask.description,\r\n        newTask.picture,\r\n        props.state.dataUser.user,\r\n        props.state.boardData.id,\r\n        index\r\n      ).then(data => {\r\n        props.setDataBoard(data);\r\n        setModalLoading(false);\r\n        setNewTask({ ...newTask, title: \"\", description: \"\", isValid: true, picture: null });\r\n        props.hideModal();\r\n      });\r\n    } else {\r\n      setModalLoading(false);\r\n      setNewTask({ ...newTask, isValid: false });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Uplaod image\r\n   */\r\n\r\n  const handleUpload = e => {\r\n    const file = e.target.files[0];\r\n    if (file.type === \"image/png\" || file.type === \"image/jpeg\") {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => setNewTask({ ...newTask, picture: file });\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setNewTask({ ...newTask, errorMessage: \"Invalid file format\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"c-tasklist\" data-id={props.id}>\r\n        <header className=\"c-tasklist__header\">\r\n          <h2 className=\"c-tasklist__header__title\" title={props.name}>\r\n            {splitString(props.name, 140)}\r\n          </h2>\r\n          <span className=\"c-tasklist__header__remove\" onClick={() => props.showModal(`remove-tasklist-${props.id}`)}>\r\n            <FontAwesomeIcon icon=\"trash-alt\" />\r\n          </span>\r\n        </header>\r\n\r\n        <main className=\"c-tasklist__tasks\">\r\n          {props.state.boardData.tasklists[props.id].tasks.map((e, i) => (\r\n            <Task key={i} task={e} idTaskList={props.id} idTask={i}/>\r\n          ))}\r\n        </main>\r\n\r\n        <footer className=\"c-tasklist__footer\">\r\n          <span className=\"c-tasklist__footer__add-task\" onClick={() => props.showModal(`add-task-${props.id}`)}>\r\n            + Add task\r\n          </span>\r\n        </footer>\r\n      </section>\r\n\r\n      {/* ---------------------\r\n       Modal remove tasklist */}\r\n\r\n      {props.state.modal === `remove-tasklist-${props.id}` && (\r\n        <Modal>\r\n          <ModalContent modalTitle=\"Remove task\" type=\"small\">\r\n            <form>\r\n              <p className=\"margin-bottom-20\">\r\n                <span className=\"bold\">Are you sure</span> to remove this tasklist?\r\n              </p>\r\n              <Button text=\"Remove Board\" onClick={e => handleRemove(e)} isLoading={modalLoading} />\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n\r\n      {/* ------------------\r\n       Modal add tasklist */}\r\n\r\n      {props.state.modal === `add-task-${props.id}` && (\r\n        <Modal>\r\n          <ModalContent modalTitle=\"Add new task\" type=\"small\" onClose={() => handleCloseNewTask()}>\r\n            <form method=\"POST\">\r\n              <InputText\r\n                type=\"text\"\r\n                id=\"newTaskTitle\"\r\n                placeholder=\"Task title\"\r\n                icon=\"columns\"\r\n                extraClass=\"margin-bottom-10\"\r\n                onKeyUp={e => setNewTask({ ...newTask, title: e.target.value })}\r\n                error={newTask.isValid === false && !newTask.title.length ? true : false}\r\n                required={true}\r\n              />\r\n              <Textarea\r\n                placeholder=\"Description\"\r\n                noResize={true}\r\n                extraClass=\"margin-bottom-20\"\r\n                onKeyUp={e => setNewTask({ ...newTask, description: e.target.value })}\r\n              />\r\n\r\n              <InputText\r\n                type=\"file\"\r\n                id=\"imageTask\"\r\n                labelText=\"Image:\"\r\n                icon=\"columns\"\r\n                extraClass=\"margin-bottom-20\"\r\n                onChange={e => handleUpload(e)}\r\n              />\r\n\r\n              <Button text=\"Create new task\" onClick={e => handleCreateNewTask(e, props.id)} isLoading={modalLoading} />\r\n              {newTask.isValid === false && <p className=\"color-orange bold padding-top-20\">{newTask.errorMessage}</p>}\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nTaskList.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setDataBoard: data => dispatch(setDataBoard(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskList);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getBoard } from \"../../firebase/functions/board\";\r\nimport { createTasklist } from \"../../firebase/functions/tasklist\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { showModal, hideModal, setDataBoard } from \"../../redux/reducer\";\r\n\r\n// Components\r\nimport Header from \"../Header/Header\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport TaskList from \"../TaskList/TaskList\";\r\n\r\n// Styles\r\nimport \"./taskBoard.scss\";\r\n\r\n/**\r\n * TaskBoard\r\n */\r\n\r\nconst TaskBoard = props => {\r\n  /**\r\n   * Local State\r\n   */\r\n\r\n  // estado local del task list a crear\r\n  const [newTaskList, setNewTasklist] = useState({\r\n    name: \"\",\r\n    errorMessage: \"Complete all the fields\",\r\n    isValid: true\r\n  });\r\n\r\n  // Loaders de la sección y del modal\r\n  const [isLoading, setLoad] = useState(true);\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n\r\n  /**\r\n   * Init component\r\n   */\r\n\r\n  useEffect(() => {\r\n    if (props.state.isLogin) {\r\n      getBoard(props.match.params.board).then(data => {\r\n        props.setDataBoard(data);\r\n\r\n        setLoad(false);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Creamos/cerramos el modal de crear task list\r\n   */\r\n\r\n  const handleCreateTaskList = e => {\r\n    e.preventDefault();\r\n\r\n    if (newTaskList.name.length !== 0) {\r\n      setModalLoading(true);\r\n      setNewTasklist({ ...newTaskList, errorMessage: \"\" });\r\n\r\n      // Create taskList\r\n      createTasklist(props.state.dataUser.user, props.state.boardData.id, newTaskList.name).then(data => {\r\n        props.setDataBoard({ ...props.state.boardData, tasklists: [...props.state.boardData.tasklists, data] });\r\n        setModalLoading(false);\r\n        props.hideModal();\r\n      });\r\n    } else {\r\n      setModalLoading(false);\r\n      setNewTasklist({ ...newTaskList, isValid: false });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render\r\n   */\r\n\r\n  if (!props.state.isLogin) {\r\n    return <Redirect from=\"/\" to=\"/login\" />;\r\n  } else if (isLoading) {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <Loader />\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <Header {...props} />\r\n        <main className=\"taskboard\">\r\n          <header className=\"subheader\">\r\n            <div className=\"subheader__content\">\r\n              <span className=\"subheader__icon\">\r\n                <FontAwesomeIcon icon=\"pencil-alt\" />\r\n              </span>\r\n\r\n              <div className=\"subheader__title\">\r\n                <h2>Board: {props.state.boardData.name}</h2>\r\n                <span className=\"subheader__title__user\">Owner: {props.state.boardData.owner}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"subheader__actions\">\r\n              <Button text=\"New Task List\" onClick={() => props.showModal(\"new-task-list\")} />\r\n            </div>\r\n          </header>\r\n\r\n          <section className=\"taskboard__table\">\r\n            <div className=\"taskboard__table__scroll-wrap\">\r\n              {props.state.boardData.tasklists &&\r\n                props.state.boardData.tasklists.map((e, i) => <TaskList key={i} id={i} name={e.title} />)}\r\n            </div>\r\n          </section>\r\n\r\n          {props.state.modal === \"new-task-list\" && (\r\n            <Modal>\r\n              <ModalContent modalTitle=\"Add new task list\" type=\"small\">\r\n                <form method=\"POST\">\r\n                  <InputText\r\n                    type=\"text\"\r\n                    id=\"newTaskListName\"\r\n                    placeholder=\"Task list Name\"\r\n                    icon=\"pencil-alt\"\r\n                    extraClass=\"margin-bottom-20\"\r\n                    onKeyUp={e => setNewTasklist({ ...newTaskList, name: e.target.value })}\r\n                    error={newTaskList.isValid === false && !newTaskList.name.length ? true : false}\r\n                    required={true}\r\n                  />\r\n\r\n                  <Button text=\"Create Task list\" onClick={e => handleCreateTaskList(e)}  isLoading={modalLoading} />\r\n                  {newTaskList.isValid === false && (\r\n                    <p className=\"color-orange bold padding-top-20\">{newTaskList.errorMessage}</p>\r\n                  )}\r\n                </form>\r\n              </ModalContent>\r\n            </Modal>\r\n          )}\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setDataBoard: data => dispatch(setDataBoard(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskBoard);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport \"./app.scss\";\r\n\r\n// Components\r\nimport Login from \"../Login/Login\";\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport TaskBoard from \"../TaskBoard/TaskBoard\";\r\n\r\n/**\r\n * App\r\n */\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    document.title = \"Trollelo\";\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <Route exact path=\"/trollelo/login\" render={props => <Login {...props} />} />\r\n        <Route exact path=\"/trollelo/dashboard\" render={() => <Dashboard />} />\r\n        <Route path=\"/trollelo/taskBoard/:board\" render={props => <TaskBoard {...props} />} />\r\n\r\n        <Redirect from=\"/\" to=\"/trollelo/login\" />\r\n        <Redirect from=\"/\" to={!props.state.isLogin ? \"/trollelo/login\" : \"/trollelo/dashboard\"} />\r\n\r\n        <Route render={() => <div>Page not found</div>} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);\r\n","// Fontawesome Icons\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport {\r\n  faSignInAlt,\r\n  faColumns,\r\n  faTimes,\r\n  faUser,\r\n  faKey,\r\n  faEnvelope,\r\n  faTrash,\r\n  faAlignLeft,\r\n  faSpinner,\r\n  faPencilAlt,\r\n  faTrashAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(\r\n  faSignInAlt,\r\n  faColumns,\r\n  faTimes,\r\n  faUser,\r\n  faKey,\r\n  faEnvelope,\r\n  faTrash,\r\n  faAlignLeft,\r\n  faSpinner,\r\n  faPencilAlt,\r\n  faTrashAlt\r\n);\r\n\r\nexport default library;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nimport App from \"./components/App/App\";\nimport \"./utils/fontawesome\";\nimport \"./styles/index.scss\";\n\nconst root = document.getElementById(\"root\");\n\n\n// Principal render\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </Provider>,\n  root\n);\n"],"sourceRoot":""}