{"version":3,"sources":["redux/reducer.js","redux/store.js","firebase/firebase.js","firebase/config.js","firebase/functions/user.js","components/InputText/InputText.js","components/Button/Button.js","components/Loader/Loader.js","components/Login/Login.js","firebase/functions/board.js","components/Header/Header.js","hooks/usePortal/usePortal.js","components/Modal/Modal.js","components/Modal/ModalContent.js","components/Textarea/Textarea.js","utils/utilsFunctions.js","components/BoardCard/BoardCard.js","components/Dashboard/Dashboard.js","firebase/functions/tasklist.js","firebase/functions/task.js","components/Task/Task.js","components/TaskList/TaskList.js","components/TaskBoard/TaskBoard.js","components/App/App.js","utils/fontawesome.js","index.js"],"names":["setLogin","boolean","type","setUser","data","showModal","modal","setBoards","boards","setDataBoard","store","createStore","state","action","newState","Object","objectSpread","isLoading","isLogin","dataUser","userBoards","boardData","window","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","auth","GoogleAuthProvider","database","storage","functions","firestore","_callee","user","email","password","regenerator_default","a","wrap","_context","prev","next","getUserData","abrupt","exists","message","t0","setAuthUser","sent","t1","setCollectionUser","uid","stop","id","Promise","resolve","reject","collection","doc","set","then","catch","error","createUserWithEmailAndPassword","authUser","signInWithEmailAndPassword","where","get","querySnapshot","empty","forEach","InputText","props","extra","extraClass","errorClass","react_default","createElement","className","concat","labelText","htmlFor","icon","index_es","placeholder","onKeyUp","required","defaultValue","value","Button","_ref","text","secondary","terciary","size","onClick","submit","secondaryClass","terciaryClass","sizeClass","iconElement","Loader","connect","dispatch","_useState","useState","isValid","errorMessage","_useState2","slicedToArray","dataLogin","setDataLogin","_useState3","_useState4","dataRegister","setDataRegister","_useState5","_useState6","shake","setShake","_useState7","_useState8","setLoad","_useState9","_useState10","signInLoading","setSignInLoading","_useState11","_useState12","registerLoading","setRegisterLoading","useEffect","localStorage","setTimeout","handleRegister","e","preventDefault","length","_x","_x2","_x3","_createUser","apply","this","arguments","createUser","userResult","setItem","components_Loader_Loader","react_router","from","to","method","components_InputText_InputText","target","components_Button_Button","handleAuth","name","description","userData","refId","setBoard","setUserBoardId","ref","owner","tasklists","update","toConsumableArray","getBoard","getUserBoards","push","filter","_callee2","userRef","_context2","delete","returnButton","undefined","location","pathname","match","react_router_dom","clear","usePortal","rootElemRef","useRef","rootElem","existingParent","document","querySelector","parentElem","rootContainer","setAttribute","createRootElement","body","insertBefore","lastElementChild","nextElementSibling","appendChild","current","remove","childNodes","Modal","children","createPortal","propTypes","PropTypes","element","isRequired","hideModal","title","modalTitle","typeClass","modalRef","style","setProperty","onClose","Textarea","noResizeClass","noResize","splitString","max","slice","modalLoading","setModalLoading","handleRemove","_x4","_x5","_removeBoard","removeBoard","Fragment","components_Modal_Modal","Modal_ModalContent","newBoard","setNewBoard","handleCreateBoard","_createBoard","createBoard","components_Header_Header","map","i","components_BoardCard_BoardCard","key","components_Textarea_Textarea","board","tasklistName","tasklist","setTasklist","tasks","dataId","boardRef","setTask","indexTasklist","updateBoard","task","images","tags","comments","updateFirebaseTask","indexTask","removeFirebaseTask","_callee3","_context3","modalRemoveLoading","setModalRemoveLoading","idTaskList","idTask","handleUpdateTask","_x6","_x7","_x8","_x9","_x10","_x11","_updateTask","updateTask","handleRemoveTask","_x12","_x13","_x14","_removeTask","removeTask","newTask","setNewTask","_removeTasklist","removeTasklist","handleCreateNewTask","index","_createTask","createTask","data-id","components_Task_Task","newTaskList","setNewTasklist","params","handleCreateTaskList","_createTasklist","createTasklist","components_TaskList_TaskList","exact","path","render","components_Login_Login","components_Dashboard_Dashboard","components_TaskBoard_TaskBoard","library","add","faSignInAlt","faColumns","faTimes","faUser","faKey","faEnvelope","faTrash","faAlignLeft","faSpinner","faPencilAlt","faTrashAlt","root","getElementById","ReactDOM","es","component","App"],"mappings":"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","file":"static/js/main.7f8d1559.chunk.js","sourcesContent":["/**\r\n * Reducer actions\r\n */\r\n\r\nexport const setLogin = boolean => ({ type: \"SET_LOGIN\", boolean });\r\nexport const setLoading = boolean => ({ type: \"SET_LOADING\", boolean });\r\nexport const setUser = data => ({ type: \"SET_USER\", data });\r\nexport const showModal = modal => ({ type: \"SHOW_MODAL\", modal });\r\nexport const hideModal = () => ({ type: \"HIDE_MODAL\" });\r\nexport const setBoards = boards => ({ type: \"SET_BOARDS\", boards });\r\nexport const setDataBoard = data => ({ type: \"SET_DATA_BOARD\", data });\r\n\r\n/**\r\n * Reducer\r\n */\r\n\r\nexport const reducer = (state, action) => {\r\n  let newState = { ...state };\r\n\r\n  switch (action.type) {\r\n    case \"SET_LOADING\":\r\n      return { ...newState, isLoading: action.boolean };\r\n\r\n    case \"SET_LOGIN\":\r\n      return { ...newState, isLogin: action.boolean };\r\n\r\n    case \"SET_USER\":\r\n      return { ...newState, dataUser: action.data };\r\n\r\n    case \"SHOW_MODAL\":\r\n      return { ...newState, modal: action.modal };\r\n\r\n    case \"HIDE_MODAL\":\r\n      return { ...newState, modal: null };\r\n\r\n    case \"SET_BOARDS\":\r\n      return { ...newState, userBoards: action.boards };\r\n    \r\n    case \"SET_DATA_BOARD\":\r\n      return { ...newState, boardData: action.data };\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n","import { reducer } from \"./reducer\";\r\nimport { createStore } from \"redux\";\r\n\r\n/**\r\n * Initial state\r\n */\r\n\r\nlet initialState = {\r\n  isLogin: false\r\n};\r\n\r\n/**\r\n * Redux store\r\n */\r\n\r\nexport let store = createStore(\r\n  reducer,\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\r\n);\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n// import \"firebase/database\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/functions\";\r\nimport { firebaseData } from \"./config\";\r\n\r\n// Initialize Firebase\r\nexport const firebaseConfig = {\r\n  apiKey: firebaseData.apiKey,\r\n  authDomain: firebaseData.authDomain,\r\n  databaseURL: firebaseData.databaseURL,\r\n  projectId: firebaseData.projectId,\r\n  storageBucket: firebaseData.storageBucket,\r\n  messagingSenderId: firebaseData.messagingSenderId\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport const storage = firebase.storage();\r\nexport const functions = firebase.functions();\r\nexport const database = firebase.firestore();\r\n\r\nexport default firebase;","// Initialize Firebase\r\nexport const firebaseData = {\r\n  apiKey: \"AIzaSyBX9MFiIyLvo3f9athVr7r9aWCd69mfINA\",\r\n  authDomain: \"trolello-react.firebaseapp.com\",\r\n  databaseURL: \"https://trolello-react.firebaseio.com\",\r\n  projectId: \"trolello-react\",\r\n  storageBucket: \"trolello-react.appspot.com\",\r\n  messagingSenderId: \"682014830422\"\r\n};\r\n","import { auth, database } from \"../firebase\";\r\n\r\n/**\r\n * Funcion para crear usuarios\r\n * @param {string} user\r\n * @param {string} email\r\n * @param {string} password\r\n * @callback callback\r\n */\r\n\r\nexport async function createUser(user, email, password) {\r\n  let dataUser = null;\r\n\r\n  // comprobamos si existe el usuario\r\n  try {\r\n    await getUserData(user);\r\n    return { exists: true, message: \"The user name already exists\" };\r\n  } catch (error) {}\r\n\r\n  // autentificamos\r\n  try {\r\n    dataUser = await setAuthUser(email, password);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n\r\n  // seteamos usuario\r\n  await setCollectionUser(user, email, password, dataUser.user.uid);\r\n  return dataUser;\r\n}\r\n\r\n/**\r\n * Funcion para guardar un nuevo usuario en la colección 'users'\r\n * @param {string} email\r\n * @param {string} password\r\n * @returns {promise}\r\n */\r\n\r\nexport function setCollectionUser(user, email, password, id) {\r\n  return new Promise((resolve, reject) => {\r\n    database\r\n      .collection(\"users\")\r\n      .doc(user)\r\n      .set({\r\n        user: user,\r\n        email: email,\r\n        password: password,\r\n        id: id,\r\n        boards: []\r\n      })\r\n      .then(data => resolve())\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para guardar el nuevo usuario en 'Authenticathion' y autentificarse\r\n * @param {string} email\r\n * @param {string} password\r\n * @returns {promise}\r\n */\r\n\r\nexport function setAuthUser(email, password) {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(data => resolve(data))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para autentificar con un usuario ya creado\r\n * @param {string} user\r\n * @param {string} password\r\n * @returns {promise}\r\n */\r\n\r\nexport function authUser(email, password) {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        return resolve();\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para obtener userPath a traves del userName\r\n * @param {string} user\r\n * @returns {promise}\r\n */\r\n\r\nexport function getUserData(user) {\r\n  return new Promise((resolve, reject) => {\r\n    database\r\n      .collection(\"users\")\r\n      .where(\"user\", \"==\", user)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        return !querySnapshot.empty ? querySnapshot.forEach(doc => resolve(doc.data())) : reject(\"The user not exists\");\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport \"./inputText.scss\";\r\n\r\n/**\r\n * InputText\r\n */\r\n\r\nconst InputText = props => {\r\n  const extra = props.extraClass ? props.extraClass : \"\";\r\n  const errorClass = props.error ? \"c-input-text--error\" : \"\";\r\n\r\n  return (\r\n    <div className={`c-input-text ${errorClass} ${extra}`}>\r\n      {props.labelText && (\r\n        <label className=\"c-input-text__label\" htmlFor={props.id}>\r\n          {props.labelText}\r\n        </label>\r\n      )}\r\n      <div className=\"c-input-text__field\">\r\n        {props.icon && (\r\n          <div className=\"c-input-text__icon\">\r\n            <FontAwesomeIcon icon={props.icon} />\r\n          </div>\r\n        )}\r\n        <input\r\n          type={props.type}\r\n          id={props.id}\r\n          placeholder={props.placeholder}\r\n          onKeyUp={props.onKeyUp}\r\n          required={props.required ? \"required\" : null}\r\n          defaultValue={props.value ? props.value : \"\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nInputText.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  labelText: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onKeyUp: PropTypes.func,\r\n  extraClass: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  icon: PropTypes.string,\r\n  required: PropTypes.bool\r\n};\r\n\r\nexport default InputText;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport './button.scss';\r\n\r\n/**\r\n * Button\r\n */\r\n\r\nconst Button = ({ text, secondary, terciary, size, extraClass, onClick, icon, submit, isLoading }) => {\r\n  const extra = extraClass ? extraClass : \"\";\r\n\r\n  const secondaryClass = secondary ? \"c-button--secondary\" : \"\";\r\n  const terciaryClass = terciary ? \"c-button--terciary\" : \"\";\r\n  const sizeClass = !size ? \"\" : size === \"small\" ? \"c-button--small\" : \"\";\r\n  const iconElement = icon ? <FontAwesomeIcon icon={icon} className=\"c-button__icon\" /> : \"\";\r\n\r\n  return (\r\n    <button\r\n      className={`c-button ${secondaryClass} ${terciaryClass} ${isLoading ? \"c-button--loading\" : \"\"} ${sizeClass} ${extra}`}\r\n      onClick={onClick}\r\n      type={submit ? \"submit\" : null}>\r\n      {!isLoading && iconElement}\r\n      {isLoading ? <FontAwesomeIcon icon=\"spinner\" className=\"c-button__load-icon\" /> : null}\r\n      {isLoading ? \"Loading\" : text}\r\n    </button>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  variant: PropTypes.oneOf([\"secondary\", \"terciary\"]),\r\n  size: PropTypes.oneOf([\"small\"]),\r\n  onClick: PropTypes.func,\r\n  icon: PropTypes.string,\r\n  submit: PropTypes.bool,\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport './loader.scss';\r\n\r\n/**\r\n * Loader\r\n */\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-wrap\">\r\n      <div className=\"c-loader\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLogin, setUser } from \"../../redux/reducer\";\r\nimport { createUser, getUserData, authUser } from \"../../firebase/functions/user\";\r\n\r\n// Components\r\nimport InputText from \"../InputText/InputText\";\r\nimport Button from \"../Button/Button\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\n// Styles\r\nimport './login.scss';\r\n\r\n/**\r\n * Login\r\n */\r\n\r\nconst Login = props => {\r\n  /**\r\n   * Component State\r\n   */\r\n\r\n  const [dataLogin, setDataLogin] = useState({\r\n    user: \"\",\r\n    password: \"\",\r\n    isValid: true,\r\n    errorMessage: \"Complete all the fields to login\"\r\n  });\r\n\r\n  const [dataRegister, setDataRegister] = useState({\r\n    user: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    isValid: true,\r\n    errorMessage: \"The register is not complete\"\r\n  });\r\n\r\n  const [shake, setShake] = useState(false);\r\n  const [isLoading, setLoad] = useState(true);\r\n  const [signInLoading, setSignInLoading] = useState(false);\r\n  const [registerLoading, setRegisterLoading] = useState(false);\r\n\r\n  /**\r\n   * Effect\r\n   */\r\n\r\n  /**\r\n   * Comprbamos si hay usuario en localstorage y accedemos\r\n   */\r\n\r\n  useEffect(() => {\r\n    if (localStorage.user) {\r\n      getUserData(localStorage.user).then(data => {\r\n        authUser(data.email, localStorage.password).then(() => {\r\n          props.setUser(data);\r\n          props.setLogin(true);\r\n          setLoad(false);\r\n        });\r\n      });\r\n    } else {\r\n      setLoad(false);\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Reseteamos el estado de shake para que pueda funcionar una y otra vez\r\n   */\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShake(false);\r\n    }, 500);\r\n  }, [shake]);\r\n\r\n  /**\r\n   * Authentication\r\n   */\r\n\r\n  const handleAuth = e => {\r\n    e.preventDefault();\r\n    setSignInLoading(true);\r\n\r\n    // Comprobamos que los datos sean correctos\r\n    if (!dataLogin.user.length || !dataLogin.password.length) {\r\n      setDataLogin({ ...dataLogin, isValid: false });\r\n      setShake(true);\r\n      setSignInLoading(false);\r\n\r\n      // Si los datos son correctos nos logueamos\r\n    } else {\r\n      setDataLogin({ ...dataLogin, isValid: true });\r\n\r\n      getUserData(dataLogin.user)\r\n        .then(data => {\r\n          authUser(data.email, dataLogin.password)\r\n            .then(() => {\r\n              localStorage.setItem(\"user\", dataLogin.user);\r\n              localStorage.setItem(\"password\", dataLogin.password);\r\n              props.setUser({ user: data.user, email: data.email });\r\n              props.setLogin(true);\r\n            })\r\n            .catch(error => {\r\n              setSignInLoading(false);\r\n              setDataLogin({ ...dataLogin, isValid: false, errorMessage: error.message });\r\n              setShake(true);\r\n            });\r\n        })\r\n        .catch(error => {\r\n          setSignInLoading(false);\r\n          setDataLogin({ ...dataLogin, isValid: false, errorMessage: error });\r\n          setShake(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Register\r\n   */\r\n\r\n  const handleRegister = e => {\r\n    e.preventDefault();\r\n    setRegisterLoading(true);\r\n\r\n    // Comprobamos que los datos sean correctos, si no lo son mostramos el error\r\n    if (!dataRegister.user.length || !dataRegister.email.length || !dataRegister.password.length) {\r\n      setDataRegister({ ...dataRegister, isValid: false });\r\n      setShake(true);\r\n      setRegisterLoading(false);\r\n\r\n      // Si los datos son correctos registramos, antes comporbando si el usuario ya existe\r\n    } else {\r\n      createUser(dataRegister.user, dataRegister.email, dataRegister.password).then(userResult => {\r\n        // Si el usuario ya existe\r\n        if (userResult.message) {\r\n          setDataRegister({ ...dataRegister, isValid: false, errorMessage: userResult.message });\r\n          setShake(true);\r\n          setRegisterLoading(false);\r\n\r\n          // Si no existe accedemos\r\n        } else {\r\n          setDataRegister({ ...dataRegister, isValid: true });\r\n          props.setUser({ user: dataRegister.user, email: dataRegister.email });\r\n          props.setLogin(true);\r\n          localStorage.setItem(\"user\", dataRegister.user);\r\n          localStorage.setItem(\"password\", dataRegister.password);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render\r\n   */\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  } else if (props.state.isLogin) {\r\n    return <Redirect from=\"/trollelo/\" to=\"/trollelo/dashboard\" />;\r\n  } else {\r\n    return (\r\n      <section className=\"login-wrap\">\r\n        <header className=\"login-wrap__header\">\r\n          <h1 className=\"login-wrap__header__brand\">Trolello</h1>\r\n        </header>\r\n\r\n        <main className={`login ${shake === true ? \"login--shake\" : \"\"}`}>\r\n          <form className=\"login__form\" method=\"POST\">\r\n            <h2 className=\"login__title\">Sign in</h2>\r\n            <InputText\r\n              type=\"text\"\r\n              id=\"signInUser\"\r\n              placeholder=\"User\"\r\n              extraClass=\"margin-bottom-10\"\r\n              icon=\"user\"\r\n              onKeyUp={e => setDataLogin({ ...dataLogin, user: e.target.value })}\r\n              error={dataLogin.isValid === false && !dataLogin.user.length ? true : false}\r\n              required={true}\r\n            />\r\n\r\n            <InputText\r\n              type=\"password\"\r\n              id=\"signInPassword\"\r\n              placeholder=\"Password\"\r\n              extraClass=\"margin-bottom-20\"\r\n              icon=\"key\"\r\n              onKeyUp={e => setDataLogin({ ...dataLogin, password: e.target.value })}\r\n              error={dataLogin.isValid === false && !dataLogin.password.length ? true : false}\r\n              required={true}\r\n            />\r\n\r\n            <Button text=\"Log in\" onClick={e => handleAuth(e)} submit={true} isLoading={signInLoading} />\r\n\r\n            {dataLogin.isValid === false && <p className=\"color-orange bold padding-top-20\">{dataLogin.errorMessage}</p>}\r\n          </form>\r\n          <form className=\"login__form\" method=\"POST\">\r\n            <h2 className=\"login__title\">Register</h2>\r\n            <InputText\r\n              type=\"text\"\r\n              id=\"registerUser\"\r\n              placeholder=\"User\"\r\n              icon=\"user\"\r\n              extraClass=\"margin-bottom-10\"\r\n              onKeyUp={e => setDataRegister({ ...dataRegister, user: e.target.value })}\r\n              error={dataRegister.isValid === false && !dataRegister.user.length ? true : false}\r\n              required={true}\r\n            />\r\n            <InputText\r\n              type=\"email\"\r\n              id=\"registerEmail\"\r\n              placeholder=\"Email\"\r\n              icon=\"envelope\"\r\n              extraClass=\"margin-bottom-10\"\r\n              onKeyUp={e => setDataRegister({ ...dataRegister, email: e.target.value })}\r\n              error={!dataRegister.isValid && !dataRegister.email.length ? true : false}\r\n              required={true}\r\n            />\r\n            <InputText\r\n              type=\"password\"\r\n              id=\"registerPassword\"\r\n              placeholder=\"Password\"\r\n              icon=\"key\"\r\n              extraClass=\"margin-bottom-20\"\r\n              onKeyUp={e => setDataRegister({ ...dataRegister, password: e.target.value })}\r\n              error={dataRegister.isValid === false && !dataRegister.password.length ? true : false}\r\n              required={true}\r\n            />\r\n            <Button text=\"Register\" type=\"secondary\" onClick={e => handleRegister(e)} submit={true} isLoading={registerLoading} />\r\n\r\n            {dataRegister.isValid === false && <p className=\"color-orange bold padding-top-20\">{dataRegister.errorMessage}</p>}\r\n          </form>\r\n        </main>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  setLogin: boolean => dispatch(setLogin(boolean)),\r\n  setUser: data => dispatch(setUser(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import { database } from \"../firebase\";\r\nimport { getUserData } from \"./user\";\r\n\r\n/**\r\n * Funcion para Crear un board a partir del userName.\r\n * @param {string} user\r\n * @param {string} name\r\n * @param {string} description\r\n * @returns {promise}\r\n */\r\n\r\nexport async function createBoard(user, name, description) {\r\n  const userData = await getUserData(user);\r\n  const refId = await setBoard(user, name, description);\r\n  await setUserBoardId(userData.boards, refId, userData.user);\r\n}\r\n\r\n/**\r\n * Funcion para setear el board en la colección de boards.\r\n * @param {string} user\r\n * @param {string} name\r\n * @param {string} description\r\n * @returns {promise}\r\n */\r\n\r\nfunction setBoard(user, name, description) {\r\n  return new Promise((resolve, reject) => {\r\n    const ref = database.collection(\"boards\").doc();\r\n    ref\r\n      .set({\r\n        owner: user,\r\n        name: name,\r\n        description: description,\r\n        id: ref.id,\r\n        tasklists: []\r\n      })\r\n      .then(() => resolve(ref.id))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para setear el id de la board creada en el usuario\r\n * @param {string} data\r\n * @param {string} id\r\n * @param {string} user\r\n * @returns {promise}\r\n */\r\n\r\nfunction setUserBoardId(data, id, user) {\r\n  return new Promise((resolve, reject) => {\r\n    const userRef = database.collection(\"users\").doc(user);\r\n    userRef\r\n      .update({ boards: [...data, id] })\r\n      .then(() => resolve())\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para obtener un 'board'\r\n * @param {string} id\r\n * @returns {promise}\r\n */\r\n\r\nexport function getBoard(id) {\r\n  return new Promise((resolve, reject) => {\r\n    database\r\n      .collection(\"boards\")\r\n      .doc(id)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        return resolve(querySnapshot.data());\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para obtener todos los 'boards'\r\n * @param {string} id\r\n * @returns {promise}\r\n */\r\n\r\n// Refactor de rendimiento\r\nexport function getUserBoards(user) {\r\n  return new Promise((resolve, reject) => {\r\n    // Obtenemos todas las 'boards'\r\n    database\r\n      .collection(\"boards\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        // Las filtramos para obtener solo las de el usuario\r\n        let boards = [];\r\n        querySnapshot.forEach(doc => {\r\n          boards.push(doc.data());\r\n        });\r\n        return !querySnapshot.empty ? resolve(boards.filter(e => e.owner === user)) : reject(\"no boards\");\r\n      })\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para Borrar un 'board' del usuario\r\n * @param {string} id\r\n * @param {string} user\r\n * @returns {promise}\r\n */\r\n\r\nexport async function removeBoard(id, user) {\r\n  const userRef = database.collection(\"users\").doc(user);\r\n\r\n  await database\r\n    .collection(\"boards\")\r\n    .doc(id)\r\n    .delete();\r\n\r\n  const userData = await getUserData(user);\r\n  await userRef.update({ boards: userData.boards.filter(e => e !== id) });\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLogin, setUser, setBoards } from \"../../redux/reducer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Components\r\nimport Button from \"../Button/Button\";\r\n\r\n// Styles\r\nimport \"./header.scss\";\r\n\r\n/**\r\n * Header\r\n */\r\n\r\nconst Header = props => {\r\n  /**\r\n   * Logout function\r\n   */\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    props.setLogin(false);\r\n    props.setUser(null);\r\n    props.setBoards(null);\r\n  };\r\n\r\n  // Taskboard return button\r\n  let returnButton = null;\r\n  if (props.location !== undefined && props.location.pathname.match(\"TaskBoard\")) {\r\n    returnButton = (\r\n      <div className=\"c-header__return-btn\">\r\n        <Link to={`/trollelo/dashboard`}>\r\n          <FontAwesomeIcon icon=\"align-left\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header className=\"c-header\">\r\n      <div className=\"c-header__wrap\">\r\n        {returnButton}\r\n        <h1 className=\"c-header__logo\">\r\n          <Link to={`/trollelo/dashboard`}>Trollelo</Link>\r\n        </h1>\r\n        <div className=\"c-header__actions\">\r\n          <Button secondary text=\"logOut\" size=\"small\" icon=\"sign-in-alt\" onClick={() => logOut()} />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  setLogin: boolean => dispatch(setLogin(boolean)),\r\n  setUser: data => dispatch(setUser(data)),\r\n  setBoards: boards => dispatch(setBoards(boards))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","/** Credits: https://www.jayfreestone.com/writing/react-portals-with-hooks/ */\r\n\r\nimport { useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * Creates DOM element to be used as React root.\r\n * @returns {HTMLElement}\r\n */\r\n\r\nfunction createRootElement(id) {\r\n  const rootContainer = document.createElement(\"div\");\r\n  rootContainer.setAttribute(\"id\", id);\r\n  return rootContainer;\r\n}\r\n\r\n/**\r\n * Appends element as last child of body.\r\n * @param {HTMLElement} rootElem\r\n */\r\n\r\nfunction addRootElement(rootElem) {\r\n  document.body.insertBefore(rootElem, document.body.lastElementChild.nextElementSibling);\r\n}\r\n\r\n/**\r\n * Hook to create a React Portal.\r\n * Automatically handles creating and tearing-down the root elements (no SRR\r\n * makes this trivial), so there is no need to ensure the parent target already\r\n * exists.\r\n * @example\r\n * const target = usePortal(id, [id]);\r\n * return createPortal(children, target);\r\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\r\n * @returns {HTMLElement} The DOM node to use as the Portal target.\r\n */\r\n\r\nfunction usePortal(id) {\r\n  const rootElemRef = useRef(null);\r\n\r\n  useEffect(function setupElement() {\r\n    // Look for existing target dom element to append to\r\n    const existingParent = document.querySelector(`#${id}`);\r\n    // Parent is either a new root or the existing dom element\r\n    const parentElem = existingParent || createRootElement(id);\r\n\r\n    // If there is no existing DOM element, add a new one.\r\n    if (!existingParent) {\r\n      addRootElement(parentElem);\r\n    }\r\n\r\n    // Add the detached element to the parent\r\n    parentElem.appendChild(rootElemRef.current);\r\n\r\n    return function removeElement() {\r\n      rootElemRef.current.remove();\r\n      if (parentElem.childNodes.length === -1) {\r\n        parentElem.remove();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * It's important we evaluate this lazily:\r\n   * - We need first render to contain the DOM element, so it shouldn't happen\r\n   *   in useEffect. We would normally put this in the constructor().\r\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\r\n   *   since this will run every single render (that's a lot).\r\n   * - We want the ref to consistently point to the same DOM element and only\r\n   *   ever run once.\r\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\r\n   */\r\n  function getRootElem() {\r\n    if (!rootElemRef.current) {\r\n      rootElemRef.current = document.createElement(\"div\");\r\n    }\r\n    return rootElemRef.current;\r\n  }\r\n\r\n  return getRootElem();\r\n}\r\n\r\nexport default usePortal;\r\n","import { createPortal } from \"react-dom\";\r\nimport usePortal from \"../../hooks/usePortal/usePortal\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * Modal\r\n */\r\n\r\nconst Modal = ({ children }) => {\r\n  const target = usePortal(\"modal\");\r\n  return createPortal(children, target);\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../redux/reducer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Styles\r\nimport \"./modal.scss\";\r\n\r\n/**\r\n * ModalContent\r\n */\r\n\r\nexport const ModalContent = props => {\r\n  const title = props.modalTitle ? <h2 className=\"c-modal__title\">{props.modalTitle}</h2> : \"\";\r\n  const typeClass = props.type === \"small\" ? \"c-modal__container--small\" : \"\";\r\n\r\n  const modalRef = useRef();\r\n\r\n  /**\r\n   * Efecto de opacidad al aparecer\r\n   */\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => modalRef.current.style.setProperty(\"--modal-opacity\", 1), 100);\r\n    return () => {\r\n      modalRef.current.style.setProperty(\"--modal-opacity\", 0);\r\n    };\r\n  }, []);\r\n\r\n  const hideModalComponent = () => {\r\n    modalRef.current.style.setProperty(\"--modal-opacity\", 0);\r\n    setTimeout(() => props.hideModal(), 100);\r\n    if (props.onClose) props.onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"c-modal\" ref={modalRef}>\r\n      <div className={`c-modal__container ${typeClass}`}>\r\n        {title}\r\n        {props.children}\r\n        <FontAwesomeIcon icon=\"times\" className=\"c-modal__button-close\" onClick={() => hideModalComponent()} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nModalContent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  modalTitle: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  type: PropTypes.oneOf([\"small\"])\r\n};\r\n\r\n/**\r\n * Redux connection\r\n */\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  hideModal: () => dispatch(hideModal())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ModalContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport \"./textarea.scss\";\r\n\r\n/**\r\n * Textarea\r\n */\r\n\r\nconst Textarea = props => {\r\n  const noResizeClass = props.noResize ? \"c-textarea--no-resize\" : \"\";\r\n  const extra = props.extraClass ? props.extraClass : \"\";\r\n  const errorClass = props.error ? \"c-textarea--error\" : \"\";\r\n\r\n  return (\r\n    <div className=\"c-textarea\">\r\n      {props.labelText && (\r\n        <label className=\"c-textarea__label\" htmlFor={props.id}>\r\n          {props.labelText}\r\n        </label>\r\n      )}\r\n      <textarea\r\n        className={`c-textarea__field ${errorClass} ${noResizeClass} ${extra}`}\r\n        placeholder={props.placeholder}\r\n        onKeyUp={props.onKeyUp}\r\n        defaultValue={props.value ? props.value : \"\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nTextarea.propTypes = {\r\n  extraClass: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onKeyUp: PropTypes.func,\r\n  noResize: PropTypes.bool,\r\n  error: PropTypes.bool\r\n};\r\n\r\nexport default Textarea;\r\n","/**\r\n * Funcion para limitar caracteres\r\n * @param {string} text\r\n * @param {number} max\r\n * @returns {string}\r\n */\r\n\r\nexport function splitString(text, max) {\r\n  return text.length >= max ? `${text.slice(0, max)}...` : text;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { removeBoard, getUserBoards } from \"../../firebase/functions/board\";\r\nimport { showModal, hideModal, setBoards } from \"../../redux/reducer\";\r\nimport { splitString } from \"../../utils/utilsFunctions\";\r\n\r\n// Styles\r\nimport \"./boardCard.scss\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport Button from \"../Button/Button\";\r\n\r\n/**\r\n * BoardCard\r\n */\r\n\r\nconst BoardCard = props => {\r\n  // State para setear el loader del modal\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n\r\n  const handleRemove = e => {\r\n    e.preventDefault();\r\n    setModalLoading(true);\r\n\r\n    removeBoard(props.id, props.state.dataUser.user).then(() => {\r\n      getUserBoards(props.state.dataUser.user)\r\n        .then(data => {\r\n          setModalLoading(false);\r\n          props.hideModal();\r\n          props.setBoards(data);\r\n        })\r\n        .catch(() => props.setBoards([]));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <figure className=\"c-board-card\">\r\n        <h3 className=\"c-board-card__name\">\r\n          <Link to={`/trollelo/TaskBoard/${props.id}`}>{props.name}</Link>\r\n        </h3>\r\n        <p> {splitString(props.description, 250)} </p>\r\n        <div className=\"c-board-card__delete\" onClick={() => props.showModal(`modal-remove-board${props.id}`)}>\r\n          <FontAwesomeIcon icon=\"trash\" />\r\n          Remove\r\n        </div>\r\n      </figure>\r\n\r\n      {props.state.modal === `modal-remove-board${props.id}` && (\r\n        <Modal>\r\n          <ModalContent modalTitle=\"Remove board\" type=\"small\">\r\n            <form>\r\n              <p className=\"margin-bottom-20\">\r\n                <span className=\"bold\">Are you sure</span> to remove this Board?\r\n              </p>\r\n              <Button text=\"Remove Board\" onClick={e => handleRemove(e)} isLoading={modalLoading} />\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nBoardCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired\r\n};\r\n\r\n/**\r\n * Redux connection\r\n */\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setBoards: boards => dispatch(setBoards(boards))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BoardCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { showModal, hideModal, setBoards } from \"../../redux/reducer\";\r\nimport { createBoard, getUserBoards } from \"../../firebase/functions/board\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Components\r\nimport Header from \"../Header/Header\";\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport Textarea from \"../Textarea/Textarea\";\r\nimport BoardCard from \"../BoardCard/BoardCard\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\n// Styles\r\nimport \"./dashboard.scss\";\r\n\r\n/**\r\n * Dashboard\r\n */\r\n\r\nconst Dashboard = props => {\r\n  /**\r\n   * Local State\r\n   */\r\n\r\n  const [newBoard, setNewBoard] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    errorMessage: \"Complete all the fields\",\r\n    isValid: true\r\n  });\r\n\r\n  const [isLoading, setLoad] = useState(true);\r\n\r\n  // State para setear el loader del modal\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n\r\n  /**\r\n   * Obtenemos todos los usuarios\r\n   */\r\n\r\n  useEffect(() => {\r\n    if (props.state.isLogin) {\r\n      getUserBoards(props.state.dataUser.user)\r\n        .then(data => {\r\n          props.setBoards(data);\r\n          setLoad(false);\r\n        })\r\n        .catch(error => {\r\n          props.setBoards([]);\r\n          setLoad(false);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Creamos/cerramos el modal\r\n   */\r\n\r\n  const handleCreateBoard = e => {\r\n    e.preventDefault();\r\n\r\n    if (newBoard.name.length !== 0 && newBoard.description.length !== 0) {\r\n      // Creamos un 'board' con el usuario de redux y los datos del formulario local.\r\n      // Seteamos el 'board' en el state local y cerramos el modal\r\n\r\n      setModalLoading(true);\r\n      setNewBoard({ ...newBoard, errorMessage: \"\" });\r\n\r\n      createBoard(props.state.dataUser.user, newBoard.name, newBoard.description).then(data => {\r\n        setNewBoard({ ...newBoard, isValid: true, name: \"\", description: \"\" });\r\n        props.hideModal();\r\n        setModalLoading(false);\r\n\r\n        // obtenemos la lista de 'boards' actualizadas\r\n        // Seteamos el 'board' en redux\r\n\r\n        getUserBoards(props.state.dataUser.user)\r\n          .then(data => {\r\n            props.setBoards(data);\r\n          })\r\n          .catch(() => props.setBoards([]));\r\n      });\r\n    } else {\r\n      setModalLoading(false);\r\n      setNewBoard({ ...newBoard, isValid: false });\r\n    }\r\n  };\r\n\r\n  const handleCloseNewBoard = () => {\r\n    setNewBoard({ ...newBoard, name: \"\", description: \"\", isValid: true });\r\n  };\r\n\r\n  if (!props.state.isLogin) {\r\n    return <Redirect from=\"/\" to=\"/login\" />;\r\n  } else if (isLoading) {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <Loader />\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n\r\n        <main className=\"dashboard\">\r\n          <header className=\"subheader\">\r\n            <div className=\"subheader__content\">\r\n              <span className=\"subheader__icon\">\r\n                <FontAwesomeIcon icon=\"align-left\" />\r\n              </span>\r\n\r\n              <div className=\"subheader__title\">\r\n                <h2>My Dashboard</h2>\r\n                <span className=\"subheader__title__user\">User: {props.state.dataUser.user}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"subheader__actions\">\r\n              <Button text=\"New Board\" onClick={() => props.showModal(\"new-board\")} />\r\n            </div>\r\n          </header>\r\n          <section className=\"dashboard__table\">\r\n            {props.state.userBoards &&\r\n              props.state.userBoards.map((e, i) => {\r\n                return (\r\n                  <BoardCard\r\n                    key={i}\r\n                    name={props.state.userBoards[i].name}\r\n                    description={props.state.userBoards[i].description}\r\n                    id={props.state.userBoards[i].id}\r\n                  />\r\n                );\r\n              })}\r\n\r\n            {props.state.modal === \"new-board\" && (\r\n              <Modal>\r\n                <ModalContent modalTitle=\"Add new board\" type=\"small\" onClose={() => handleCloseNewBoard()}>\r\n                  <form method=\"POST\">\r\n                    <InputText\r\n                      type=\"text\"\r\n                      id=\"newBoardName\"\r\n                      placeholder=\"Board Name\"\r\n                      icon=\"columns\"\r\n                      extraClass=\"margin-bottom-10\"\r\n                      onKeyUp={e => setNewBoard({ ...newBoard, name: e.target.value })}\r\n                      error={newBoard.isValid === false && !newBoard.name.length ? true : false}\r\n                      required={true}\r\n                    />\r\n                    <Textarea\r\n                      placeholder=\"Description\"\r\n                      noResize={true}\r\n                      extraClass=\"margin-bottom-20\"\r\n                      onKeyUp={e => setNewBoard({ ...newBoard, description: e.target.value })}\r\n                      error={newBoard.isValid === false && !newBoard.description.length ? true : false}\r\n                      required={true}\r\n                    />\r\n                    <Button text=\"Create Board\" onClick={e => handleCreateBoard(e)} submit={true} isLoading={modalLoading} />\r\n                    {newBoard.isValid === false && <p className=\"color-orange bold padding-top-20\">{newBoard.errorMessage}</p>}\r\n                  </form>\r\n                </ModalContent>\r\n              </Modal>\r\n            )}\r\n          </section>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setBoards: boards => dispatch(setBoards(boards))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n","import { database } from \"../firebase\";\r\nimport { getBoard } from \"./board\";\r\n\r\n/**\r\n * Funcion para Crear una taskList a partir del userName.\r\n * @param {string} user\r\n * @param {string} board\r\n * @param {string} tasklistName\r\n * @returns {promise}\r\n */\r\n\r\nexport async function createTasklist(user, board, tasklistName) {\r\n  const boardData = await getBoard(board);\r\n  const tasklist = await setTasklist(user, board, tasklistName, boardData.tasklists);\r\n  return tasklist;\r\n}\r\n\r\n/**\r\n * Funcion para setear una tasklist\r\n * @param {string} title\r\n * @param {array} data\r\n * @returns {promise}\r\n */\r\n\r\nexport function setTasklist(user, board, title, data) {\r\n  return new Promise((resolve, reject) => {\r\n    const tasklist = {\r\n      title: title,\r\n      owner: user,\r\n      tasks: []\r\n    };\r\n\r\n    database\r\n      .collection(\"boards\")\r\n      .doc(board)\r\n      .update({ tasklists: [...data, tasklist] })\r\n      .then(() => resolve(tasklist))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para Borrar un 'tasklist'\r\n * @param {string} id\r\n * @param {string} user\r\n * @returns {promise}\r\n */\r\n\r\nexport async function removeTasklist(dataId, board) {\r\n  const boardRef = database.collection(\"boards\").doc(board);\r\n\r\n  let boardData = await getBoard(board);\r\n  await boardRef.update({ tasklists: boardData.tasklists.filter((e, i) => i !== dataId) });\r\n  boardData = await getBoard(board);\r\n\r\n  return boardData.tasklists;\r\n}\r\n","import { database } from \"../firebase\";\r\nimport { getBoard } from \"./board\";\r\n\r\n/**\r\n * Funcion para setear la task dentro de su tasklist\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {object} boardData\r\n * @param {number} indexTasklist\r\n * @returns {promise}\r\n */\r\n\r\nexport function setTask(title, description, user, boardData, indexTasklist) {\r\n  const ref = database.collection(\"boards\").doc(boardData.id);\r\n  let updateBoard = boardData;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const task = {\r\n      title: title,\r\n      description: description,\r\n      owner: user,\r\n      images: [],\r\n      tags: [],\r\n      comments: []\r\n    };\r\n\r\n    updateBoard.tasklists[indexTasklist].tasks = [...updateBoard.tasklists[indexTasklist].tasks, task];\r\n\r\n    ref\r\n      .set(updateBoard)\r\n      .then(() => resolve(updateBoard))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion para crear una task\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {string} board\r\n * @param {number} indexTasklist\r\n * @returns {promise}\r\n */\r\n\r\nexport async function createTask(title, description, user, board, indexTasklist) {\r\n  const boardData = await getBoard(board);\r\n  const task = await setTask(title, description, user, boardData, indexTasklist);\r\n  return task;\r\n}\r\n\r\n/**\r\n * Funcion para udpatear la task\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {object} boardData\r\n * @param {number} indexTasklist\r\n * @param {number} indexTask\r\n * @returns {promise}\r\n */\r\n\r\nexport function updateFirebaseTask(title, description, user, boardData, indexTasklist, indexTask) {\r\n  const ref = database.collection(\"boards\").doc(boardData.id);\r\n  let updateBoard = boardData;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const task = {\r\n      title: title,\r\n      description: description,\r\n      owner: user,\r\n      images: [],\r\n      tags: [],\r\n      comments: []\r\n    };\r\n\r\n    updateBoard.tasklists[indexTasklist].tasks[indexTask] = task;\r\n\r\n    ref\r\n      .set(updateBoard)\r\n      .then(() => resolve(updateBoard))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion Update\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {string} board\r\n * @param {number} indexTasklist\r\n * @param {number} indexTask\r\n * @returns {promise}\r\n */\r\n\r\nexport async function updateTask(title, description, user, board, indexTasklist, indexTask) {\r\n  const boardData = await getBoard(board);\r\n  const task = await updateFirebaseTask(title, description, user, boardData, indexTasklist, indexTask);\r\n  return task;\r\n}\r\n\r\n/**\r\n * Funcion para borrar la task\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {object} boardData\r\n * @param {number} indexTasklist\r\n * @param {number} indexTask\r\n * @returns {promise}\r\n */\r\n\r\nexport function removeFirebaseTask(boardData, indexTasklist, indexTask) {\r\n  const ref = database.collection(\"boards\").doc(boardData.id);\r\n  let updateBoard = boardData;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    updateBoard.tasklists[indexTasklist].tasks = updateBoard.tasklists[indexTasklist].tasks.filter((e, i) => i !== indexTask);\r\n\r\n    ref\r\n      .set(updateBoard)\r\n      .then(() => resolve(updateBoard))\r\n      .catch(error => reject(error));\r\n  });\r\n}\r\n\r\n/**\r\n * Funcion remove\r\n * @param {string} title\r\n * @param {string} description\r\n * @param {string} user\r\n * @param {string} board\r\n * @param {number} indexTasklist\r\n * @param {number} indexTask\r\n * @returns {promise}\r\n */\r\n\r\nexport async function removeTask(board, indexTasklist, indexTask) {\r\n  const boardData = await getBoard(board);\r\n  const task = await removeFirebaseTask(boardData, indexTasklist, indexTask);\r\n  return task;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal, hideModal, setDataBoard } from \"../../redux/reducer\";\r\nimport { updateTask, removeTask } from \"../../firebase/functions/task\";\r\nimport { splitString } from \"../../utils/utilsFunctions\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport Button from \"../Button/Button\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport Textarea from \"../Textarea/Textarea\";\r\n\r\n// Styles\r\nimport \"./task.scss\";\r\n\r\n/**\r\n * Button\r\n */\r\n\r\nconst Task = props => {\r\n  // State para setear el loader del modal\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  const [modalRemoveLoading, setModalRemoveLoading] = useState(false);\r\n  const [task, setTask] = useState({\r\n    title: props.state.boardData.tasklists[props.idTaskList].tasks[props.idTask].title,\r\n    description: props.state.boardData.tasklists[props.idTaskList].tasks[props.idTask].description,\r\n    errorMessage: \"Complete the title field\",\r\n    isValid: true\r\n  });\r\n\r\n  /**\r\n   * Update task\r\n   */\r\n\r\n  const handleUpdateTask = e => {\r\n    e.preventDefault();\r\n    setModalLoading(true);\r\n\r\n    if (task.title.length) {\r\n      setModalLoading(true);\r\n\r\n      updateTask(\r\n        task.title,\r\n        task.description,\r\n        props.state.dataUser.user,\r\n        props.state.boardData.id,\r\n        props.idTaskList,\r\n        props.idTask\r\n      ).then(data => {\r\n        props.setDataBoard(data);\r\n        setModalLoading(false);\r\n        setTask({ ...task, title: \"\", description: \"\", isValid: true });\r\n        props.hideModal();\r\n      });\r\n    } else {\r\n      setModalLoading(false);\r\n      setTask({ ...task, isValid: false });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove task\r\n   */\r\n\r\n  const handleRemoveTask = e => {\r\n    e.preventDefault();\r\n    setModalRemoveLoading(true);\r\n\r\n    removeTask(props.state.boardData.id, props.idTaskList, props.idTask).then(data => {\r\n      setModalRemoveLoading(false);\r\n      props.hideModal();\r\n      props.setDataBoard(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"c-task\">\r\n        <h3 className=\"c-task__title\" onClick={() => props.showModal(`task-${props.idTask}${props.idTaskList}`)}>\r\n          {splitString(props.title, 150)}\r\n        </h3>\r\n      </div>\r\n\r\n      {/* ------------------\r\n       Modal edit tasklist */}\r\n\r\n      {props.state.modal === `task-${props.idTask}${props.idTaskList}` && (\r\n        <Modal>\r\n          <ModalContent modalTitle=\"Edit task\">\r\n            <form method=\"POST\">\r\n              <InputText\r\n                type=\"text\"\r\n                id=\"taskTitle\"\r\n                labelText=\"Title:\"\r\n                icon=\"columns\"\r\n                extraClass=\"margin-bottom-20\"\r\n                onKeyUp={e => setTask({ ...task, title: e.target.value })}\r\n                error={task.isValid === false && !task.title.length ? true : false}\r\n                required={true}\r\n                value={props.state.boardData.tasklists[props.idTaskList].tasks[props.idTask].title}\r\n              />\r\n\r\n              <Textarea\r\n                labelText=\"Description:\"\r\n                extraClass=\"margin-bottom-20\"\r\n                onKeyUp={e => setTask({ ...task, description: e.target.value })}\r\n                value={props.state.boardData.tasklists[props.idTaskList].tasks[props.idTask].description}\r\n              />\r\n\r\n              <Button text=\"Update task\" onClick={e => handleUpdateTask(e)} submit={true} isLoading={modalLoading} />\r\n              <Button\r\n                text=\"Remove task\"\r\n                extraClass=\"margin-left-10\"\r\n                onClick={e => handleRemoveTask(e)}\r\n                secondary\r\n                isLoading={modalRemoveLoading}\r\n              />\r\n              {task.isValid === false && <p className=\"color-orange bold padding-top-20\">{task.errorMessage}</p>}\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nTask.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  idTask: PropTypes.number,\r\n  idTaskList: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setDataBoard: data => dispatch(setDataBoard(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Task);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { showModal, hideModal, setDataBoard } from \"../../redux/reducer\";\r\nimport { removeTasklist } from \"../../firebase/functions/tasklist\";\r\nimport { createTask } from \"../../firebase/functions/task\";\r\nimport { splitString } from \"../../utils/utilsFunctions\";\r\n\r\n// Components\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport Button from \"../Button/Button\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport Textarea from \"../Textarea/Textarea\";\r\nimport Task from \"../Task/Task\";\r\n\r\n// Styles\r\nimport \"./taskList.scss\";\r\n\r\n/**\r\n * TaskList\r\n */\r\n\r\nconst TaskList = props => {\r\n  // State para setear el loader del modal\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  const [newTask, setNewTask] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    errorMessage: \"Complete the title field\",\r\n    isValid: true\r\n  });\r\n\r\n  /**\r\n   * Remove task\r\n   */\r\n\r\n  const handleRemove = e => {\r\n    e.preventDefault();\r\n    setModalLoading(true);\r\n\r\n    removeTasklist(props.id, props.state.boardData.id).then(data => {\r\n      props.hideModal();\r\n      setModalLoading(false);\r\n      props.setDataBoard({ ...props.state.boardData, tasklists: data });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Close task\r\n   */\r\n\r\n  const handleCloseNewTask = () => {\r\n    setNewTask({ ...newTask, title: \"\", description: \"\", isValid: true });\r\n  };\r\n\r\n  /**\r\n   * Create new task\r\n   */\r\n\r\n  const handleCreateNewTask = (e, index) => {\r\n    e.preventDefault();\r\n    setModalLoading(true);\r\n\r\n    if (newTask.title.length) {\r\n      setModalLoading(true);\r\n      setNewTask({ ...newTask, errorMessage: \"\" });\r\n\r\n      createTask(newTask.title, newTask.description, props.state.dataUser.user, props.state.boardData.id, index).then(data => {\r\n        props.setDataBoard(data);\r\n        setModalLoading(false);\r\n        setNewTask({ ...newTask, title: \"\", description: \"\", isValid: true });\r\n        props.hideModal();\r\n      });\r\n    } else {\r\n      setModalLoading(false);\r\n      setNewTask({ ...newTask, isValid: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"c-tasklist\" data-id={props.id}>\r\n        <header className=\"c-tasklist__header\">\r\n          <h2 className=\"c-tasklist__header__title\" title={props.name}>\r\n            {splitString(props.name, 140)}\r\n          </h2>\r\n          <span className=\"c-tasklist__header__remove\" onClick={() => props.showModal(`remove-tasklist-${props.id}`)}>\r\n            <FontAwesomeIcon icon=\"trash-alt\" />\r\n          </span>\r\n        </header>\r\n\r\n        <main className=\"c-tasklist__tasks\">\r\n          {props.state.boardData.tasklists[props.id].tasks.map((e, i) => (\r\n            <Task title={e.title} key={i} idTask={i} idTaskList={props.id} />\r\n          ))}\r\n        </main>\r\n\r\n        <footer className=\"c-tasklist__footer\">\r\n          <span className=\"c-tasklist__footer__add-task\" onClick={() => props.showModal(`add-task-${props.id}`)}>\r\n            + Add task\r\n          </span>\r\n        </footer>\r\n      </section>\r\n\r\n      {/* ---------------------\r\n       Modal remove tasklist */}\r\n\r\n      {props.state.modal === `remove-tasklist-${props.id}` && (\r\n        <Modal>\r\n          <ModalContent modalTitle=\"Remove task\" type=\"small\">\r\n            <form>\r\n              <p className=\"margin-bottom-20\">\r\n                <span className=\"bold\">Are you sure</span> to remove this tasklist?\r\n              </p>\r\n              <Button text=\"Remove Board\" onClick={e => handleRemove(e)} isLoading={modalLoading} />\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n\r\n      {/* ------------------\r\n       Modal add tasklist */}\r\n\r\n      {props.state.modal === `add-task-${props.id}` && (\r\n        <Modal>\r\n          <ModalContent modalTitle=\"Add new task\" type=\"small\" onClose={() => handleCloseNewTask()}>\r\n            <form method=\"POST\">\r\n              <InputText\r\n                type=\"text\"\r\n                id=\"newTaskTitle\"\r\n                placeholder=\"Task title\"\r\n                icon=\"columns\"\r\n                extraClass=\"margin-bottom-10\"\r\n                onKeyUp={e => setNewTask({ ...newTask, title: e.target.value })}\r\n                error={newTask.isValid === false && !newTask.title.length ? true : false}\r\n                required={true}\r\n              />\r\n              <Textarea\r\n                placeholder=\"Description\"\r\n                noResize={true}\r\n                extraClass=\"margin-bottom-20\"\r\n                onKeyUp={e => setNewTask({ ...newTask, description: e.target.value })}\r\n              />\r\n              <Button\r\n                text=\"Create new task\"\r\n                onClick={e => handleCreateNewTask(e, props.id)}\r\n                submit={true}\r\n                isLoading={modalLoading}\r\n              />\r\n              {newTask.isValid === false && <p className=\"color-orange bold padding-top-20\">{newTask.errorMessage}</p>}\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n/**\r\n * PropTypes\r\n */\r\n\r\nTaskList.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setDataBoard: data => dispatch(setDataBoard(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskList);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getBoard } from \"../../firebase/functions/board\";\r\nimport { createTasklist } from \"../../firebase/functions/tasklist\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { showModal, hideModal, setDataBoard } from \"../../redux/reducer\";\r\n\r\n// Components\r\nimport Header from \"../Header/Header\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport ModalContent from \"../Modal/ModalContent\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport TaskList from \"../TaskList/TaskList\";\r\n\r\n// Styles\r\nimport \"./taskBoard.scss\";\r\n\r\n/**\r\n * TaskBoard\r\n */\r\n\r\nconst TaskBoard = props => {\r\n  /**\r\n   * Local State\r\n   */\r\n\r\n  // estado local del task list a crear\r\n  const [newTaskList, setNewTasklist] = useState({\r\n    name: \"\",\r\n    errorMessage: \"Complete all the fields\",\r\n    isValid: true\r\n  });\r\n\r\n  // Loaders de la sección y del modal\r\n  const [isLoading, setLoad] = useState(true);\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n\r\n  /**\r\n   * Init component\r\n   */\r\n\r\n  useEffect(() => {\r\n    if (props.state.isLogin) {\r\n      getBoard(props.match.params.board).then(data => {\r\n        props.setDataBoard(data);\r\n\r\n        setLoad(false);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Creamos/cerramos el modal de crear task list\r\n   */\r\n\r\n  const handleCreateTaskList = e => {\r\n    e.preventDefault();\r\n\r\n    if (newTaskList.name.length !== 0) {\r\n      setModalLoading(true);\r\n      setNewTasklist({ ...newTaskList, errorMessage: \"\" });\r\n\r\n      // Create taskList\r\n      createTasklist(props.state.dataUser.user, props.state.boardData.id, newTaskList.name).then(data => {\r\n        props.setDataBoard({ ...props.state.boardData, tasklists: [...props.state.boardData.tasklists, data] });\r\n        setModalLoading(false);\r\n        props.hideModal();\r\n      });\r\n    } else {\r\n      setModalLoading(false);\r\n      setNewTasklist({ ...newTaskList, isValid: false });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render\r\n   */\r\n\r\n  if (!props.state.isLogin) {\r\n    return <Redirect from=\"/\" to=\"/login\" />;\r\n  } else if (isLoading) {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <Loader />\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <Header {...props} />\r\n        <main className=\"taskboard\">\r\n          <header className=\"subheader\">\r\n            <div className=\"subheader__content\">\r\n              <span className=\"subheader__icon\">\r\n                <FontAwesomeIcon icon=\"pencil-alt\" />\r\n              </span>\r\n\r\n              <div className=\"subheader__title\">\r\n                <h2>Board: {props.state.boardData.name}</h2>\r\n                <span className=\"subheader__title__user\">Owner: {props.state.boardData.owner}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"subheader__actions\">\r\n              <Button text=\"New Task List\" onClick={() => props.showModal(\"new-task-list\")} />\r\n            </div>\r\n          </header>\r\n\r\n          <section className=\"taskboard__table\">\r\n            <div className=\"taskboard__table__scroll-wrap\">\r\n              {props.state.boardData.tasklists &&\r\n                props.state.boardData.tasklists.map((e, i) => <TaskList key={i} id={i} name={e.title} />)}\r\n            </div>\r\n          </section>\r\n\r\n          {props.state.modal === \"new-task-list\" && (\r\n            <Modal>\r\n              <ModalContent modalTitle=\"Add new task list\" type=\"small\">\r\n                <form method=\"POST\">\r\n                  <InputText\r\n                    type=\"text\"\r\n                    id=\"newTaskListName\"\r\n                    placeholder=\"Task list Name\"\r\n                    icon=\"pencil-alt\"\r\n                    extraClass=\"margin-bottom-20\"\r\n                    onKeyUp={e => setNewTasklist({ ...newTaskList, name: e.target.value })}\r\n                    error={newTaskList.isValid === false && !newTaskList.name.length ? true : false}\r\n                    required={true}\r\n                  />\r\n\r\n                  <Button text=\"Create Task list\" onClick={e => handleCreateTaskList(e)} submit={true} isLoading={modalLoading} />\r\n                  {newTaskList.isValid === false && (\r\n                    <p className=\"color-orange bold padding-top-20\">{newTaskList.errorMessage}</p>\r\n                  )}\r\n                </form>\r\n              </ModalContent>\r\n            </Modal>\r\n          )}\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modal => dispatch(showModal(modal)),\r\n  hideModal: () => dispatch(hideModal()),\r\n  setDataBoard: data => dispatch(setDataBoard(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskBoard);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport \"./app.scss\";\r\n\r\n// Components\r\nimport Login from \"../Login/Login\";\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\nimport TaskBoard from \"../TaskBoard/TaskBoard\";\r\n\r\n/**\r\n * App\r\n */\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    document.title = \"Trollelo\";\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <Route exact path=\"/trollelo/login\" render={props => <Login {...props} />} />\r\n        <Route exact path=\"/trollelo/dashboard\" render={() => <Dashboard />} />\r\n        <Route path=\"/trollelo/taskBoard/:board\" render={props => <TaskBoard {...props} />} />\r\n\r\n        <Redirect from=\"/\" to=\"/trollelo/login\" />\r\n        <Redirect from=\"/\" to={!props.state.isLogin ? \"/trollelo/login\" : \"/trollelo/dashboard\"} />\r\n        <Redirect from=\"https://alvaro07.github.io/trollelo/\" to=\"https://alvaro07.github.io/trollelo/login\" />\r\n\r\n        <Route render={() => <div>Page not found</div>} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ state });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);\r\n","// Fontawesome Icons\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport {\r\n  faSignInAlt,\r\n  faColumns,\r\n  faTimes,\r\n  faUser,\r\n  faKey,\r\n  faEnvelope,\r\n  faTrash,\r\n  faAlignLeft,\r\n  faSpinner,\r\n  faPencilAlt,\r\n  faTrashAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(\r\n  faSignInAlt,\r\n  faColumns,\r\n  faTimes,\r\n  faUser,\r\n  faKey,\r\n  faEnvelope,\r\n  faTrash,\r\n  faAlignLeft,\r\n  faSpinner,\r\n  faPencilAlt,\r\n  faTrashAlt\r\n);\r\n\r\nexport default library;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nimport App from \"./components/App/App\";\nimport \"./utils/fontawesome\";\nimport \"./styles/index.scss\";\n\nconst root = document.getElementById(\"root\");\n\n\n// Principal render\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </Provider>,\n  root\n);\n"],"sourceRoot":""}